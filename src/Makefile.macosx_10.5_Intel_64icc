# This Makefile is for Mac OSX 10.5 (Panther) for 64 bit AFNI

USE_ZLIB  = -DHAVE_ZLIB
LZLIB     = -lz
USE_GIFTI = -DHAVE_GIFTI
LGIFTI    = /usr/local64/lib/libexpat64.a

# ----------------------------------------------------------------------
# X configuration
#
# uncomment to build using local /usr/local/afniX 'X' tree
USE_LOCAL_X_TREE = 1
ifdef USE_LOCAL_X_TREE
    XROOT = /usr/local/afniX
    XROOT_I = -I$(XROOT)/include
    XROOT_L = -L$(XROOT)/lib64
else
    XROOT = /sw
    XROOT_L = -L$(XROOT)/lib
endif

# uncomment USE_LESSTIF to use lesstif instead of openmotif
# USE_LESSTIF = 1
ifdef USE_LESSTIF
    LESSTIF_DEFS = -DUSING_LESSTIF

    XLIBS = $(XROOT)/lib64/libXm.a $(XROOT)/lib64/libXt.a 
else
    # default is static motif
    XLIBS = $(XROOT)/lib64/libXm.a -lXt
endif

# in case user wants to override with system dynamic libs
# XLIBS = -lXm -lXt
# ----------------------------------------------------------------------


CCDEBS = -DAFNI_DEBUG -DIMSEQ_DEBUG -DDISPLAY_DEBUG -DTHD_DEBUG
CEXTRA = -m64 -Wcomment -Wformat -DUSE_TRACING -DHAVE_XDBE -UDONT_USE_MCW_MALLOC $(LESSTIF_DEFS)
CC     = icc -O2 -DDARWIN $(CEXTRA)
CCVOL  = icc -O2 -DDARWIN $(CEXTRA)
CCFAST = icc -O2 -DDARWIN $(CEXTRA)
CCMIN  = icc -m64
CCD    = $(CC) $(CCDEBS)
CCOLD  = $(CC)

OMPFLAG = -openmp -openmp-link static -DUSE_OMP

IFLAGS = -I. $(XROOT_I) -I/usr/local/include -I/usr/X11R6/include -I/sw/include 
LFLAGS = -L/opt/intel/Compiler/11.0/059/lib -L. $(XROOT_L) -L/usr/lib -L/usr/local/lib -L/usr/X11R6/lib -L/sw/lib  -Wl,-x -Wl,-multiply_defined -Wl,warning -Wl,-bind_at_load

CCSVD  = icc -m64 -O0

PLUGIN_SUFFIX = so
PLUGIN_LFLAGS = -m64 -bundle -flat_namespace -undefined suppress -Wl,-x
PLUGIN_CC     = $(CC) -dynamic -fno-common
PLFLAGS       = -m64 -dynamic $(LFLAGS)

# include the line below if you want to include vector arith in 3dDeconvolve_f
# SPECIAL = -framework Accelerate -DUSE_ACCELERATE

AR     = /usr/bin/ar
RANLIB = /usr/bin/ranlib
TAR    = /usr/bin/tar
MKDIR  = /bin/mkdir
GZIP   = /usr/bin/gzip
LD     = icc

RM = /bin/rm -f
MV = /bin/mv -f
CP = /bin/cp -f

LINT = /usr/bin/lint -a -b -u -v -x $(IFLAGS) $(CCDEFS)

INSTALLDIR = ./macosx_10.5_Intel_64icc
LIBDIR = $(INSTALLDIR)
SHOWOFF = -DSHOWOFF=macosx_10.5_Intel_64icc

INSTALL_PREREQ = suma
#INSTALL_PREREQ = suma
# uncomment if the Gnu Scientific Library is installed (libgsl, libgslcblas)
# GSLPROGS = balloon
EXPROGS = gifti_tool $(GSLPROGS)

# for dynamic linking

LLIBS  = -lmri -lf2c $(XLIBS) -lXft -lfontconfig -lpng -liconv -lXmu -lXp -lXpm -lXext -lX11 $(LZLIB) $(LGIFTI) -lm -lc

# vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
# For suma 
# ZSS Aug. 08. LibGLw.a now made locally and called libGLws.a 

# -------------------------------------------------------------------
#  # OSX 10.5 has issues with libGL, where the multiple copies cause a cycle
# (somehow).  Get around this by using -dylib_file (in a strange way).

SUMA_GLLIB = /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
SUMA_GL_DYLIB_CMD = -dylib_file $(SUMA_GLLIB): $(SUMA_GLLIB)
# -------------------------------------------------------------------

GLw_IPATH  =
GLw_LIB = -lGLw
#uncomment next two lines if you want to use libGLws.a, SUMA's copy of GLw
GLw_IPATH  = -IGLw_local 
GLw_LIB = libGLws.a


SUMA_INCLUDE_PATH = $(GLw_IPATH) -I.. -I../niml $(IFLAGS) -Igts/src -I/usr/local64/glib-2.0 -I/usr/local64/glib-2.0/include
SUMA_LINK_PATH = $(XROOT_L) $(LFLAGS) -L..

SUMA_LINK_LIB = $(XLIBS) $(GLw_LIB) $(LLIBS) -lGLU -lGL -lmri -lf2c -lmx /usr/local64/lib/libglib-2.0.a $(SUMA_GL_DYLIB_CMD)
SUMA_MAKEFILE_NAME = SUMA_Makefile
SUMA_BIN_ARCHIVE = SUMA_MacOSX.tar
SUMA_MDEFS = -DSUMA_GL_NO_CHECK_FRAME_BUFFER
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


###############################################################

MAKE = make
include Makefile.INCLUDE
