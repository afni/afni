runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data(md_12.1)
rmd <- aov_ez("id", "rt", md_12.1, within = c("angle", "noise"))
rmd
nice(rmd)
View(group.df)
length(levels(group.df$Subj)[1])
nrow(subset(group.df$Subj,group.df$Subj == group.df$Subj[1]))
subset(group.df$Subj,group.df$Subj == group.df$Subj[1])
length(subset(group.df$Subj,group.df$Subj == group.df$Subj[1]))
length(group.df$Subj == group.df$Subj[1])
length(group.df[group.df$Subj == group.df$Subj[1]])
length(group.df[group.df$Subj == group.df$Subj[1],Subj])
length(group.df[group.df$Subj == group.df$Subj[1],1])
subj1.df <- subset(group.df,group.df$Subj == group.df$Subj[1])
View(subj1.df)
all.equal(c(1,2,4),c(1,2,3))
all.equal(c('1','2','4'),c('1','2','3'))
identical(c('1','2','4'),c('1','2','3'))
identical(c('1','2','3'),c('1','2','3'))
subj.df <- subset(group.df,group.df$Subj == group.df$Subj[1])
subj.reps <- nrow(subj.df)
summary(subj.df)
subj.df <- as.data.frame(lapply(subj.df,
function(x) if(is.factor(x)) factor(x) else x))
summary(subj.df)
subj.df <- as.data.frame(lapply(subj.df,function(x)
if(is.factor(x)) factor(x) else x))[2:length(subj.df)-1]
summary(subj.df)
subj.df <- subset(group.df,group.df$Subj == group.df$Subj[1])
subj.reps <- nrow(subj.df)
subj.df <- as.data.frame(lapply(subj.df,function(x)
if(is.factor(x)) factor(x) else x))[3:length(subj.df)-1]
summary(subj.df)
subj.df <- subset(group.df,group.df$Subj == group.df$Subj[1])
subj.reps <- nrow(subj.df)
subj.df <- as.data.frame(lapply(subj.df,function(x)
if(is.factor(x)) factor(x)))
subj.df <- subset(group.df,group.df$Subj == group.df$Subj[1])
subj.df
as.data.frame(lapply(subj.df,function(x)
if(is.factor(x)) factor(x)))
as.data.frame(lapply(subj.df,function(x)
if(is.factor(x)) factor(x) else NULL))
subj.df <- subset(group.df,group.df$Subj == group.df$Subj[1])
subj.df <- subj.df[sapply(subj.df,is.factor)]
summary(subj.df)
subj.df <- subset(group.df,group.df$Subj == group.df$Subj[1])
summary(subj.df)
subj.df <- subj.df[sapply(subj.df,is.factor)]
summary(subj.df)
subj.df <- as.data.frame(lapply(subj.df,function(x)
if(is.factor(x)) factor(x) else x))[3:length(subj.df)-1]
summary(subj.df)
catVars
catVars <- c(names(group.df)[sapply(group.df,is.factor)])
if(length(catVars) > 2){
catVars <- catVars[3:length(catVars)-1]
} else { catVars <- "None" }  ## end catVars
catVars
subj.df <- subset(group.df,group.df$Subj == group.df$Subj[1],
select=catVars)
subj.df
summary(subj.df)
## get rid of empty factor levels (and the Subj and InputFile)
subj.df <- as.data.frame(lapply(subj.df,function(x)
if(is.factor(x)) factor(x) else x))
summary(subj.df)
names(subj.df[1])
## see if any of the other catVars are really wsVars
if(catVars != "None"){
## number of observations per subject
subj.df <- subset(group.df,group.df$Subj == group.df$Subj[1],select=catVars)
subj.reps <- nrow(subj.df)
## there must be some wsVars
if(subj.reps > 1){
wsVars <- c()
## get rid of empty factor levels (and the Subj and InputFile)
subj.df <- as.data.frame(lapply(subj.df,function(x)
if(is.factor(x)) factor(x) else x))
## see if it is not the same for each row, and add to wsVars
for(i in 1:length(subj.df)){
if(length(levels(subj.df[i])) > 1){
wsVars <- c(wsVars,names(subj.df[i]))
}
}
} else { wsVars <- NA }
}
## see if any of the other catVars are really wsVars
if(!("None" %in% catVars)){
## number of observations per subject
subj.df <- subset(group.df,group.df$Subj == group.df$Subj[1],select=catVars)
subj.reps <- nrow(subj.df)
## there must be some wsVars
if(subj.reps > 1){
wsVars <- c()
## get rid of empty factor levels (and the Subj and InputFile)
subj.df <- as.data.frame(lapply(subj.df,function(x)
if(is.factor(x)) factor(x) else x))
## see if it is not the same for each row, and add to wsVars
for(i in 1:length(subj.df)){
if(length(levels(subj.df[i])) > 1){
wsVars <- c(wsVars,names(subj.df[i]))
}
}
} else { wsVars <- NA }
}
wsVars
!("None" %in% catVars)
subj.df <- subset(group.df,group.df$Subj == group.df$Subj[1],select=catVars)
subj.reps <- nrow(subj.df)
subj.reps
wsVars <- c()
subj.df <- as.data.frame(lapply(subj.df,function(x)
if(is.factor(x)) factor(x) else x))
for(i in 1:length(subj.df)){
if(length(levels(subj.df[i])) > 1){
wsVars <- c(wsVars,names(subj.df[i]))
}
}
wsVars
for(i in 1:length(subj.df)){
print(subj.df[i]))
if(length(levels(subj.df[i])) > 1){
wsVars <- c(wsVars,names(subj.df[i]))
}
}
for(i in 1:length(subj.df)){
print(subj.df[i]))
if(length(levels(subj.df[i])) > 1){
wsVars <- c(wsVars,names(subj.df[i]))
}
}
for(i in 1:length(subj.df)){
print(subj.df[i]))
if(length(levels(subj.df[i])) > 1){
wsVars <- c(wsVars,names(subj.df[i]))
}
}
for(i in 1:length(subj.df)){
print(subj.df[i])
if(length(levels(subj.df[i])) > 1){
wsVars <- c(wsVars,names(subj.df[i]))
}
}
for(i in 1:length(subj.df)){
print(levels(subj.df[i]))
if(length(levels(subj.df[i])) > 1){
wsVars <- c(wsVars,names(subj.df[i]))
}
}
levels(subj.df[1])
subj.df[1]
print(levels(subj.df[[i]]))
for(i in 1:length(subj.df)){
if(length(levels(subj.df[[i]])) > 1){
wsVars <- c(wsVars,names(subj.df[i]))
}
}
wsVars
runApp()
wsVars.model <- gsub("'", '', SI.df$wsVars)
wsVars.first <- unlist(tstrsplit(wsVars.model, '[*+/-]'))[1]
wsVars.first
wsVars.first
wsVars
wsVars <- c()
## see if it is not the same for each row, and add to wsVars
for(i in 1:length(subj.df)){
if(length(levels(subj.df[[i]])) > 1){
wsVars <- c(wsVars,names(subj.df[i]))
}
}
wsVars
wsVars.model <- gsub("'", '', SI.df$wsVars)
wsVars.first <- unlist(tstrsplit(wsVars.model, '[*+/-]'))[1]
wsVars2 <- c(wsVars.first,wsVars[wsVars != wsVars.first])
wsVars2
runApp()
subset(group.df,group.df$Subj == group.df[1,1],select=catVars)
subset(group.df,group.df[1] == group.df[1,1],select=catVars)
subset(group.df,group.df[[1]] == group.df[1,1],select=catVars)
ata.frame(table(group.df[[1]]))
data.frame(table(group.df[[1]]))
data.frame(table(group.df[[1]]))$Freq
subj.freq <- data.frame(table(group.df[[1]]))$Freq
isTRUE(subj.freq)
identical(subj.freq)
all(subj.freq[1] == subj.freq)
!all(subj.freq[1] == subj.freq)
source('~/research/all_subj_prepare/Group_ShinyTemplate_2/stat_functions.R')
wsVarCatFinder(group.df,1)
source('~/research/all_subj_prepare/Group_ShinyTemplate_2/stat_functions.R')
wsVarCatFinder(group.df,1)
temp.df <- group.df[1:nrow(group.df)-1,]
wsVarCatFinder(temp.df,1)
source('~/research/all_subj_prepare/Group_ShinyTemplate_2/stat_functions.R')
wsVarCatFinder(temp.df,1)
source('~/research/all_subj_prepare/Group_ShinyTemplate_2/stat_functions.R')
wsVarCatFinder(temp.df,1)
wsVars <-
tempasdf <- wsVarCatFinder(temp.df,1)
tempasdf
wsVarCatFinder(group.df,1)
wsVars <- wsVarCatFinder(group.df,1)
wsVars
wsVars[-1]
wsVars[1-]
wsVars[1:length(wsVars)-1]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
is.data.frame(group.df)
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
source('~/research/all_subj_prepare/Group_ShinyTemplate_2/stat_functions.R')
source('~/research/all_subj_prepare/Group_ShinyTemplate_2/stat_functions.R')
runApp()
runApp()
source('~/research/all_subj_prepare/Group_ShinyTemplate_2/stat_functions.R')
runApp()
runApp()
source('~/research/all_subj_prepare/Group_ShinyTemplate_2/stat_functions.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
levels(group.df$Response)
mean.list <- list()
mean.list[[1]] <- data.frame(MedCBT=c('med','CBT'),Mean=c(1,2))
mean.list[[2]] <- data.frame(Response=c("nonresp","partresp","remitter"),
Mean=c(1.5,2.5,3.5))
mean.list
mean.list <- list()
mean.list[[1]] <- data.frame(MedCBT=c('med','CBT'),Mean=c(1,2),x=c(1,1))
mean.list[[2]] <- data.frame(Response=c("nonresp","partresp","remitter"),
Mean=c(1.5,2.5,3.5),x=c(2,2,2))
mean.list
mean.list <- list()
mean.list[[1]] <- data.frame(MedCBT=c('med','CBT'),Mean=c(1,2),x=c(1,1))
mean.list[[2]] <- data.frame(Response=c("nonresp","partresp","remitter"),
Mean=c(1.5,2.5,3.5),x=c(2,2,2))
mean.list[[3]] <- data.frame(ROI=c('scc','ins'),Mean=c(3,4),x=c(3,3))
mean.list
View(mean.df)
View(mean.df)
temp.df <- subset(mean.df,mean.df$coord == "-47.5_-6.7_21.1")
temp.df
a <- gl(2, 4, 8)
b <- gl(2, 2, 8, labels = c("ctrl", "treat"))
s <- gl(2, 1, 8, labels = c("M", "F"))
interaction(a, b)
interaction.plot(temp.df$treat,temp.df$Response,temp.df$value)
library(afex)
aov_car(value ~ treat*Response,data=temp.df)
aov_car(value ~ treat*Response,data=temp.df,factorize=FALSE)
aov_car(value ~ treat*Response + Error(Subj),data=temp.df,factorize=FALSE)
temp.aov <- aov_car(value ~ treat*Response + Error(Subj),data=temp.df,factorize=FALSE)
temp.aov
names(temp.aov)
temp.aov$anova_table
temp.aov$aov
temp.aov$Anova
temp.aov$lm
temp.aov$data
temp.int <- interaction.plot(temp.df$treat,temp.df$Response,temp.df$value)
temp.int
InteractionFrame(temp.df,c("treat","Response"),NULL,NULL)
source('~/research/all_subj_prepare/Group_ShinyTemplate_2/stat_functions.R')
InteractionFrame(temp.df,c("treat","Response"),NULL,NULL)
source('~/research/all_subj_prepare/Group_ShinyTemplate_2/stat_functions.R')
InteractionFrame(temp.df,c("treat","Response"),NULL,NULL)
temp.int <- InteractionFrame(temp.df,c("treat","Response"),NULL,NULL)
View(temp.int)
int.mean <- by(temp.df$value,list(temp.df$treat,temp.df$Response),mean)
int.mean
plot_ly(temp.df,x=interaction(temp.df$treat,temp.df$Response),y=temp.df$value)
plot_ly(temp.df,x=interaction(temp.df$treat,temp.df$Response),y=temp.df$value,
mode="Markers+Lines")
plot_ly(temp.df,x=interaction(temp.df$treat,temp.df$Response),y=temp.df$value,
mode="Markers+Lines",type="Scatter")
plot_ly(temp.df,x=interaction(temp.df$treat,temp.df$Response),y=temp.df$value,
mode="Markers+Lines",type="scatter")
interaction(temp.df$treat,temp.df$Response)
int.mean
temp.cat.vars <- c("treat","Response")
interaction.plot(temp.df$treat,temp.df$Response,temp.df$value)
length(levels(temp.df[[temp.cat.vars[1]]]))
temp2.df <- split(temp.df,temp.df$treat)
temp2.df
temp2.df <- split(temp.df,temp.df$treat)
aggregate(temp2.df$value,list(temp2.df$Response),mean)
temp2.df <- split(temp.df,temp.df$treat)
aggregate(temp2.df$value,list(temp2.df$Response),mean)
temp2.df$Response
sub.list <- split(temp.df,temp.df$treat)
lapply(sub.list,function(x) aggregate(x$value,list(x$Response),mean))
lapply(sub.list,function(x) aggregate(x$value,list(x$Response),mean))
sub.list <- split(temp.df,temp.df$treat)
mean.list <- lapply(sub.list,function(x) aggregate(x$value,list(x$Response),mean))
names(mean.list)
mean.list <- lapply(sub.list,function(x) aggregate(x$value,list(Response=x$Response),mean))
mean.list
plot.ly <- plot_ly()
for(i in 1:length(mean.list){
plot.ly <- add_trace(plot.ly,data=mean.list[[i]],x=~Response,y=~x,type='scatter',
mode='markers+lines')
}
plot.ly <- plot_ly()
for(i in 1:length(mean.list)){
plot.ly <- add_trace(plot.ly,data=mean.list[[i]],x=~Response,y=~x,type='scatter',
mode='markers+lines')
}
plot.ly
plot.ly <- plot_ly()
for(i in 1:length(mean.list)){
plot.ly <- add_trace(plot.ly,data=mean.list[[i]],x=~Response,y=~x,type='scatter',
mode='markers+lines',name=names(mean.list)[i])
}
plot.ly
InteractionCalc <- function(data.in,cont.var,fact.var){
mean.df <- aggregate(data.in[[cont.var]],list(data.in[[fact.var]]),mean)
names(mean.df) <- c(fact.var,"Mean")
return(mean.df)
}
sub.list <- split(temp.df,temp.df$treat)
InteractionCalc <- function(data.in,cont.var,fact.var){
mean.df <- aggregate(data.in[[cont.var]],list(data.in[[fact.var]]),mean)
names(mean.df) <- c(fact.var,"Mean")
return(mean.df)
}
mean.list <- lapply(sub.list,function(x) InteractionCalc(x,"value","Response"))
mean.list
InteractionCalc <- function(data.in,cont.var,fact.var){
mean.df <- aggregate(data.in[[cont.var]],list(data.in[[fact.var]]),mean)
n.df <- aggregate(data.in[[cont.var]],list(data.in[[fact.var]]),nrow)
out.df <- cbind(mean.df,n.df$x)
names(mean.df) <- c(fact.var,"Mean","n")
return(mean.df)
}
mean.list <- lapply(sub.list,function(x) InteractionCalc(x,"value","Response"))
InteractionCalc <- function(data.in,cont.var,fact.var){
mean.df <- aggregate(data.in[[cont.var]],list(data.in[[fact.var]]),mean)
n.df <- aggregate(data.in[[cont.var]],list(data.in[[fact.var]]),nrow)
out.df <- cbind(mean.df,n.df$x)
names(out.df) <- c(fact.var,"Mean","n")
return(out.df)
}
mean.list <- lapply(sub.list,function(x) InteractionCalc(x,"value","Response"))
InteractionCalc <- function(data.in,cont.var,fact.var){
mean.df <- aggregate(data.in[[cont.var]],list(data.in[[fact.var]]),mean)
n.df <- aggregate(data.in[[cont.var]],list(data.in[[fact.var]]),nrow)
# out.df <- cbind(mean.df,n.df$x)
# names(out.df) <- c(fact.var,"Mean","n")
return(n.df)
}
mean.list <- lapply(sub.list,function(x) InteractionCalc(x,"value","Response"))
mean.list
InteractionCalc <- function(data.in,cont.var,fact.var){
mean.df <- aggregate(data.in[[cont.var]],list(data.in[[fact.var]]),mean)
n.df <- aggregate(data.in[[cont.var]],list(data.in[[fact.var]]),length)
# out.df <- cbind(mean.df,n.df$x)
# names(out.df) <- c(fact.var,"Mean","n")
return(n.df)
}
mean.list <- lapply(sub.list,function(x) InteractionCalc(x,"value","Response"))
mean.list
InteractionCalc <- function(data.in,cont.var,fact.var){
mean.df <- aggregate(data.in[[cont.var]],list(data.in[[fact.var]]),mean)
n.df <- aggregate(data.in[[cont.var]],list(data.in[[fact.var]]),length)
out.df <- cbind(mean.df,n.df$x)
names(out.df) <- c(fact.var,"Mean","n")
return(out.df)
}
mean.list <- lapply(sub.list,function(x) InteractionCalc(x,"value","Response"))
mean.list
plot.ly <- plot_ly()
for(i in 1:length(mean.list)){
plot.ly <- add_trace(plot.ly,data=mean.list[[i]],x=~Response,y=~Mean,type='scatter',
mode='markers+lines',name=names(mean.list)[i],
text=n)
}
InteractionCalc <- function(data.in,cont.var,fact.var){
mean.df <- aggregate(data.in[[cont.var]],list(data.in[[fact.var]]),mean)
n.df <- aggregate(data.in[[cont.var]],list(data.in[[fact.var]]),length)
out.df <- cbind(mean.df,n.df$x)
names(out.df) <- c(fact.var,"Mean","n")
return(out.df)
}
mean.list <- lapply(sub.list,function(x) InteractionCalc(x,"value","Response"))
plot.ly <- plot_ly()
for(i in 1:length(mean.list)){
plot.ly <- add_trace(plot.ly,data=mean.list[[i]],x=~Response,y=~Mean,type='scatter',
mode='markers+lines',name=names(mean.list)[i],
text=n)
}
plot.ly <- plot_ly()
for(i in 1:length(mean.list)){
plot.ly <- add_trace(plot.ly,data=mean.list[[i]],x=~Response,y=~Mean,type='scatter',
mode='markers+lines',name=names(mean.list)[i],
text=~n)
}
mean.list
plot.ly <- plot_ly()
for(i in 1:length(mean.list)){
plot.ly <- add_trace(plot.ly,data=mean.list[[i]],x=~Response,y=~Mean,type='scatter',
mode='markers+lines',name=names(mean.list)[i],text=~n)
}
plot.ly
sub.list
plot.ly <- plot_ly()
for(i in 1:length(mean.list)){
plot.ly <- add_trace(plot.ly,data=mean.list[[i]],x=~Response+0.1,y=~Mean,type='scatter',
mode='markers+lines',name=names(mean.list)[i],text=~n)
}
plot.ly
shiny::runApp()
View(SI.df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
detach("package:afex", unload=TRUE)
detach("package:data.table", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
detach("package:lme4", unload=TRUE)
detach("package:lsmeans", unload=TRUE)
detach("package:psych", unload=TRUE)
detach("package:plotly", unload=TRUE)
detach("package:RColorBrewer", unload=TRUE)
detach("package:shiny", unload=TRUE)
detach("package:shinydashboard", unload=TRUE)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
nrow(matrix(1:12, 3, 4))
runApp()
source('~/research/ClusterExplorer/ClustExp_ShinyTemplate/stat_functions.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?sd
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
