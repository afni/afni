#!/bin/tcsh

# [Dec 30, 2016]
# v1.1

# After using @SUMA_Make_Spec_FS, take standard recon-all's aparc+aseg
# and aparc+aseg-2009 to make 1) a renumbered data set of all ROIs
# (*RENUM*), and 2) a set of only GM ROIs (*GMonly*); in both cases, a
# labeltable is attached.  The reduced enumeration is mainly for
# colorability in the AFNI viewer at present, and the GM list might be
# useful for tracking.

if ( ("$1" == "-h") || ("$1" == "-help") || ("$1" == "") ) then
    goto SHOW_HELP
endif

set sumadir = $1
set here = $PWD


# known file names from @SUMA_Make_Spec_FS

set ugh2000 = `ls aparc+aseg.nii*`
if ( $#ugh2000 == "1" ) then
    echo "++ found $ugh2000"
else
    echo "** Trouble finding 'aparc+aseg.nii*'! Check $PWD"
    exit
endif
set set2000 = "$ugh2000"

set ugh2009 = `ls aparc.a2009s+aseg.nii*`
if ( $#ugh2009 == "1" ) then
    echo "++ found $ugh2009"
else
    echo "** Trouble finding 'aparc+aseg.nii*'! Check $PWD"
    exit
endif
set set2009 = "$ugh2009"

# get reffile
set afniloc = `which afni`
set refloc  = `dirname $afniloc`
set ref2000 = "${refloc}/afni_fs_aparc+aseg_2000.txt" # for making labeltable
set ref2009 = "${refloc}/afni_fs_aparc+aseg_2009.txt" # for making labeltable

# temp file for labeltable
set tempref2000 = "__tmp_ref_827163zxcv_2000.txt"
set tempref2009 = "__tmp_ref_827163zxcv_2009.txt"

# temp files for minor checks
set tmp0 = "__zarglefizz_070.nii.gz"
set tmp1 = "__zarglefizz_071.nii.gz"
set tmp2 = "__zarglefizz_072.nii.gz"

cd $1

# --------------------- check for necessary files ------------------------
if ( ! -e $set2000 ) then
    echo "** Oi! No ${set2000}?  Must have been a problem with the"
    echo "   @SUMA_Make_Spec_FS conversion. Exiting!"
    exit
endif
if ( ! -e $set2009 ) then
    echo "** Oi! No ${set2009}?  Must have been a problem with the"
    echo "   @SUMA_Make_Spec_FS conversion. Exiting!"
    exit
endif

if ( ! -e $ref2000 ) then
    echo "** Oi! Can't find ${ref2000}?? Problem! Exiting!"
    exit
endif
if ( ! -e $ref2009 ) then
    echo "** Oi! Can't find ${ref2009}?? Problem! Exiting!"
    exit
endif

# ----------------- 2000 parc/seg: full and tissues -----------------------

# full
set s0             = `3dinfo -prefix_noext ${set2000}`
set ss             = "${s0}_REN"
set s2000_renum    = "${ss}_all.nii.gz"
set s2000_renum_lt = "${ss}_all.niml.lt"

# all subcategories at present:
set s2000_gm       = "${ss}_gm.nii.gz"           # tiss__gm
set s2000_wmat     = "${ss}_wmat.nii.gz"         # tiss__wmat
set s2000_csf      = "${ss}_csf.nii.gz"          # tiss__csf
set s2000_vent     = "${ss}_vent.nii.gz"         # tiss__vent
set s2000_othr     = "${ss}_othr.nii.gz"         # tiss__othr
set s2000_unkn     = "${ss}_unkn.nii.gz"         # tiss__unkn and >0

# ---------- >>>>>>>> BEGIN generated by Python script <<<<<<<<<< ----------
echo "++ Renumbering FS whole brain ($set2000)."
3dcalc   \
    -overwrite   \
    -a $set2000   \
    -expr "equals(a,0)*0+equals(a,2)*1+equals(a,4)*2+equals(a,5)*3+equals(a,7)*4+equals(a,8)*5+equals(a,10)*6+equals(a,11)*7+equals(a,12)*8+equals(a,13)*9+equals(a,14)*10+equals(a,15)*11+equals(a,16)*12+equals(a,17)*13+equals(a,18)*14+equals(a,24)*15+equals(a,26)*16+equals(a,28)*17+equals(a,30)*18+equals(a,31)*19+equals(a,41)*20+equals(a,43)*21+equals(a,44)*22+equals(a,46)*23+equals(a,47)*24+equals(a,49)*25+equals(a,50)*26+equals(a,51)*27+equals(a,52)*28+equals(a,53)*29+equals(a,54)*30+equals(a,58)*31+equals(a,60)*32+equals(a,62)*33+equals(a,63)*34+equals(a,72)*35+equals(a,77)*36+equals(a,80)*37+equals(a,85)*38+equals(a,251)*39+equals(a,252)*40+equals(a,253)*41+equals(a,254)*42+equals(a,255)*43+equals(a,1000)*44+equals(a,1001)*45+equals(a,1002)*46+equals(a,1003)*47+equals(a,1005)*48+equals(a,1006)*49+equals(a,1007)*50+equals(a,1008)*51+equals(a,1009)*52+equals(a,1010)*53+equals(a,1011)*54+equals(a,1012)*55+equals(a,1013)*56+equals(a,1014)*57+equals(a,1015)*58+equals(a,1016)*59+equals(a,1017)*60+equals(a,1018)*61+equals(a,1019)*62+equals(a,1020)*63+equals(a,1021)*64+equals(a,1022)*65+equals(a,1023)*66+equals(a,1024)*67+equals(a,1025)*68+equals(a,1026)*69+equals(a,1027)*70+equals(a,1028)*71+equals(a,1029)*72+equals(a,1030)*73+equals(a,1031)*74+equals(a,1032)*75+equals(a,1033)*76+equals(a,1034)*77+equals(a,1035)*78+equals(a,2000)*79+equals(a,2001)*80+equals(a,2002)*81+equals(a,2003)*82+equals(a,2005)*83+equals(a,2006)*84+equals(a,2007)*85+equals(a,2008)*86+equals(a,2009)*87+equals(a,2010)*88+equals(a,2011)*89+equals(a,2012)*90+equals(a,2013)*91+equals(a,2014)*92+equals(a,2015)*93+equals(a,2016)*94+equals(a,2017)*95+equals(a,2018)*96+equals(a,2019)*97+equals(a,2020)*98+equals(a,2021)*99+equals(a,2022)*100+equals(a,2023)*101+equals(a,2024)*102+equals(a,2025)*103+equals(a,2026)*104+equals(a,2027)*105+equals(a,2028)*106+equals(a,2029)*107+equals(a,2030)*108+equals(a,2031)*109+equals(a,2032)*110+equals(a,2033)*111+equals(a,2034)*112+equals(a,2035)*113"   \
    -prefix $s2000_renum

echo "++ ... getting gm..."
3dcalc   \
    -overwrite   \
    -a $s2000_renum   \
    -expr "a*(amongst(a,5,6,7,8,9,12,13,14,16,17,24,25,26,27,28,29,30,31,32,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75)+amongst(a,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113))"   \
    -prefix $s2000_gm

echo "++ ... getting wmat..."
3dcalc   \
    -overwrite   \
    -a $s2000_renum   \
    -expr "a*(amongst(a,1,4,20,23,36,39,40,41,42,43))"   \
    -prefix $s2000_wmat

echo "++ ... getting csf..."
3dcalc   \
    -overwrite   \
    -a $s2000_renum   \
    -expr "a*(amongst(a,15))"   \
    -prefix $s2000_csf

echo "++ ... getting vent..."
3dcalc   \
    -overwrite   \
    -a $s2000_renum   \
    -expr "a*(amongst(a,2,3,10,11,19,21,22,34,35))"   \
    -prefix $s2000_vent

echo "++ ... getting othr..."
3dcalc   \
    -overwrite   \
    -a $s2000_renum   \
    -expr "a*(amongst(a,18,33,37,38))"   \
    -prefix $s2000_othr

echo "++ ... getting unkn..."
3dcalc   \
    -overwrite   \
    -a $s2000_renum   \
    -expr "a*(amongst(a,44,79))"   \
    -prefix $s2000_unkn



# ---------- >>>>>>>> END generated by Python script <<<<<<<<<< ---------


# --------------------- checks! -------------------------------

echo "++ Running checks now."
# Did we find all we should have?
3dcalc                                   \
    -overwrite                           \
    -a $set2000                          \
    -b $s2000_renum                      \
    -expr 'step(a)-step(b)'              \
    -prefix $tmp0

set minv = `3dinfo -minus $tmp0`
set maxv = `3dinfo -maxus $tmp0`

# should be zero:
if ( $minv != $maxv ) then
    echo "** Badness in Check #0 for 2000 dsets!"
    echo "   ---> incomplete selection somehow."
    exit
endif

3dcalc                                   \
    -overwrite                           \
    -a $s2000_renum                      \
    -b $s2000_gm                         \
    -c $s2000_wmat                       \
    -d $s2000_csf                        \
    -e $s2000_vent                       \
    -f $s2000_othr                       \
    -g $s2000_unkn                       \
    -expr 'step(a)-step(b+c+d+e+f+g)'    \
    -prefix $tmp1

set minv = `3dinfo -minus $tmp1`
set maxv = `3dinfo -maxus $tmp1`
if ( $minv != $maxv ) then
    echo "** Badness in Check #1 for 2000 dsets!"
    echo "   ---> over/under-matching."
    exit
endif

# Check that ROIs are accounted for!
3dcalc                                   \
    -overwrite                           \
    -a $s2000_gm                         \
    -b $s2000_wmat                       \
    -c $s2000_csf                        \
    -d $s2000_vent                       \
    -e $s2000_othr                       \
    -f $s2000_unkn                       \
    -expr 'step(a)*step(b)*step(c)*step(d)*step(e)*step(f)' \
    -prefix $tmp2

set minv = `3dinfo -minus $tmp2`
set maxv = `3dinfo -maxus $tmp2`
if ( $minv != $maxv ) then
    echo "** Badness in Check #2 for 2000 dsets!"
    echo "   ---> overlapping tissues."
    exit
endif

# clean 'em up
\rm $tmp0 $tmp1 $tmp2

# @MakeLabelTable can't handle the comment...
grep -v "#" "${ref2000}" > "${tempref2000}"

# make+apply labeltables, based on new enumeration
foreach ff ( $s2000_renum $s2000_gm $s2000_wmat $s2000_csf $s2000_vent $s2000_othr $s2000_unkn )

    echo "++ Attaching labeltable to:   $ff"

    @MakeLabelTable                                \
        -lab_file "${tempref2000}" 1 3             \
        -labeltable $s2000_renum_lt                \
        -dset $ff

end

\rm ${tempref2000}

echo "\n\n++ OK through '2000' dsets.\n\n"



# ----------------- 2009 parc/seg: full and GM ---------------------------

# full
set s0             = `3dinfo -prefix_noext ${set2009}`
set ss             = "${s0}_REN"
set s2009_renum    = "${ss}_all.nii.gz"
set s2009_renum_lt = "${ss}_all.niml.lt"

# all subcategories at present:
set s2009_gm       = "${ss}_gm.nii.gz"           # tiss__gm
set s2009_wmat     = "${ss}_wmat.nii.gz"         # tiss__wmat
set s2009_csf      = "${ss}_csf.nii.gz"          # tiss__csf
set s2009_vent     = "${ss}_vent.nii.gz"         # tiss__vent
set s2009_othr     = "${ss}_othr.nii.gz"         # tiss__othr
set s2009_unkn     = "${ss}_unkn.nii.gz"         # tiss__unkn and >0

# ----------- >>>>>>>> BEGIN generated by Python script <<<<<<<<<< ---------

echo "++ Renumbering FS whole brain ($set2009)."
3dcalc   \
    -overwrite   \
    -a $set2009   \
    -expr "equals(a,0)*0+equals(a,2)*1+equals(a,4)*2+equals(a,5)*3+equals(a,7)*4+equals(a,8)*5+equals(a,10)*6+equals(a,11)*7+equals(a,12)*8+equals(a,13)*9+equals(a,14)*10+equals(a,15)*11+equals(a,16)*12+equals(a,17)*13+equals(a,18)*14+equals(a,24)*15+equals(a,26)*16+equals(a,28)*17+equals(a,30)*18+equals(a,31)*19+equals(a,41)*20+equals(a,43)*21+equals(a,44)*22+equals(a,46)*23+equals(a,47)*24+equals(a,49)*25+equals(a,50)*26+equals(a,51)*27+equals(a,52)*28+equals(a,53)*29+equals(a,54)*30+equals(a,58)*31+equals(a,60)*32+equals(a,62)*33+equals(a,63)*34+equals(a,72)*35+equals(a,77)*36+equals(a,80)*37+equals(a,85)*38+equals(a,251)*39+equals(a,252)*40+equals(a,253)*41+equals(a,254)*42+equals(a,255)*43+equals(a,1000)*44+equals(a,2000)*45+equals(a,11100)*46+equals(a,11101)*47+equals(a,11102)*48+equals(a,11103)*49+equals(a,11104)*50+equals(a,11105)*51+equals(a,11106)*52+equals(a,11107)*53+equals(a,11108)*54+equals(a,11109)*55+equals(a,11110)*56+equals(a,11111)*57+equals(a,11112)*58+equals(a,11113)*59+equals(a,11114)*60+equals(a,11115)*61+equals(a,11116)*62+equals(a,11117)*63+equals(a,11118)*64+equals(a,11119)*65+equals(a,11120)*66+equals(a,11121)*67+equals(a,11122)*68+equals(a,11123)*69+equals(a,11124)*70+equals(a,11125)*71+equals(a,11126)*72+equals(a,11127)*73+equals(a,11128)*74+equals(a,11129)*75+equals(a,11130)*76+equals(a,11131)*77+equals(a,11132)*78+equals(a,11133)*79+equals(a,11134)*80+equals(a,11135)*81+equals(a,11136)*82+equals(a,11137)*83+equals(a,11138)*84+equals(a,11139)*85+equals(a,11140)*86+equals(a,11141)*87+equals(a,11143)*88+equals(a,11144)*89+equals(a,11145)*90+equals(a,11146)*91+equals(a,11147)*92+equals(a,11148)*93+equals(a,11149)*94+equals(a,11150)*95+equals(a,11151)*96+equals(a,11152)*97+equals(a,11153)*98+equals(a,11154)*99+equals(a,11155)*100+equals(a,11156)*101+equals(a,11157)*102+equals(a,11158)*103+equals(a,11159)*104+equals(a,11160)*105+equals(a,11161)*106+equals(a,11162)*107+equals(a,11163)*108+equals(a,11164)*109+equals(a,11165)*110+equals(a,11166)*111+equals(a,11167)*112+equals(a,11168)*113+equals(a,11169)*114+equals(a,11170)*115+equals(a,11171)*116+equals(a,11172)*117+equals(a,11173)*118+equals(a,11174)*119+equals(a,11175)*120+equals(a,12100)*121+equals(a,12101)*122+equals(a,12102)*123+equals(a,12103)*124+equals(a,12104)*125+equals(a,12105)*126+equals(a,12106)*127+equals(a,12107)*128+equals(a,12108)*129+equals(a,12109)*130+equals(a,12110)*131+equals(a,12111)*132+equals(a,12112)*133+equals(a,12113)*134+equals(a,12114)*135+equals(a,12115)*136+equals(a,12116)*137+equals(a,12117)*138+equals(a,12118)*139+equals(a,12119)*140+equals(a,12120)*141+equals(a,12121)*142+equals(a,12122)*143+equals(a,12123)*144+equals(a,12124)*145+equals(a,12125)*146+equals(a,12126)*147+equals(a,12127)*148+equals(a,12128)*149+equals(a,12129)*150+equals(a,12130)*151+equals(a,12131)*152+equals(a,12132)*153+equals(a,12133)*154+equals(a,12134)*155+equals(a,12135)*156+equals(a,12136)*157+equals(a,12137)*158+equals(a,12138)*159+equals(a,12139)*160+equals(a,12140)*161+equals(a,12141)*162+equals(a,12143)*163+equals(a,12144)*164+equals(a,12145)*165+equals(a,12146)*166+equals(a,12147)*167+equals(a,12148)*168+equals(a,12149)*169+equals(a,12150)*170+equals(a,12151)*171+equals(a,12152)*172+equals(a,12153)*173+equals(a,12154)*174+equals(a,12155)*175+equals(a,12156)*176+equals(a,12157)*177+equals(a,12158)*178+equals(a,12159)*179+equals(a,12160)*180+equals(a,12161)*181+equals(a,12162)*182+equals(a,12163)*183+equals(a,12164)*184+equals(a,12165)*185+equals(a,12166)*186+equals(a,12167)*187+equals(a,12168)*188+equals(a,12169)*189+equals(a,12170)*190+equals(a,12171)*191+equals(a,12172)*192+equals(a,12173)*193+equals(a,12174)*194+equals(a,12175)*195"   \
    -prefix $s2009_renum

echo "++ ... getting gm..."
3dcalc   \
    -overwrite   \
    -a $s2009_renum   \
    -expr "a*(amongst(a,5,6,7,8,9,12,13,14,16,17,24,25,26,27,28,29,30,31,32,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77)+amongst(a,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128)+amongst(a,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178)+amongst(a,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195))"   \
    -prefix $s2009_gm

echo "++ ... getting wmat..."
3dcalc   \
    -overwrite   \
    -a $s2009_renum   \
    -expr "a*(amongst(a,1,4,20,23,36,39,40,41,42,43))"   \
    -prefix $s2009_wmat

echo "++ ... getting csf..."
3dcalc   \
    -overwrite   \
    -a $s2009_renum   \
    -expr "a*(amongst(a,15))"   \
    -prefix $s2009_csf

echo "++ ... getting vent..."
3dcalc   \
    -overwrite   \
    -a $s2009_renum   \
    -expr "a*(amongst(a,2,3,10,11,19,21,22,34,35))"   \
    -prefix $s2009_vent

echo "++ ... getting othr..."
3dcalc   \
    -overwrite   \
    -a $s2009_renum   \
    -expr "a*(amongst(a,18,33,37,38))"   \
    -prefix $s2009_othr

echo "++ ... getting unkn..."
3dcalc   \
    -overwrite   \
    -a $s2009_renum   \
    -expr "a*(amongst(a,44,45,46,121))"   \
    -prefix $s2009_unkn



# ----------- >>>>>>>> END generated by Python script <<<<<<<<<< --------


# --------------------- checks! -------------------------------

echo "++ Running checks now."
# Did we find all we should have?
3dcalc                                   \
    -overwrite                           \
    -a $set2009                          \
    -b $s2009_renum                      \
    -expr 'step(a)-step(b)'              \
    -prefix $tmp0

set minv = `3dinfo -minus $tmp0`
set maxv = `3dinfo -maxus $tmp0`

# should be zero:
if ( $minv != $maxv ) then
    echo "** Badness in Check #0 for 2009 dsets!"
    echo "   ---> incomplete selection somehow."
    exit
endif

3dcalc                                   \
    -overwrite                           \
    -a $s2009_renum                      \
    -b $s2009_gm                         \
    -c $s2009_wmat                       \
    -d $s2009_csf                        \
    -e $s2009_vent                       \
    -f $s2009_othr                       \
    -g $s2009_unkn                       \
    -expr 'step(a)-step(b+c+d+e+f+g)'    \
    -prefix $tmp1

set minv = `3dinfo -minus $tmp1`
set maxv = `3dinfo -maxus $tmp1`
if ( $minv != $maxv ) then
    echo "** Badness in Check #1 for 2009 dsets!"
    echo "   ---> over/under-matching."
    exit
endif

# Check that ROIs are accounted for!
3dcalc                                   \
    -overwrite                           \
    -a $s2009_gm                         \
    -b $s2009_wmat                       \
    -c $s2009_csf                        \
    -d $s2009_vent                       \
    -e $s2009_othr                       \
    -f $s2009_unkn                       \
    -expr 'step(a)*step(b)*step(c)*step(d)*step(e)*step(f)' \
    -prefix $tmp2

set minv = `3dinfo -minus $tmp2`
set maxv = `3dinfo -maxus $tmp2`
if ( $minv != $maxv ) then
    echo "** Badness in Check #2 for 2009 dsets!"
    echo "   ---> overlapping tissues."
    exit
endif

# clean 'em up
\rm $tmp0 $tmp1 $tmp2

# @MakeLabelTable can't handle the comment...
grep -v "#" "${ref2009}" > "${tempref2009}"

# make+apply labeltables, based on new enumeration
foreach ff ( $s2009_renum $s2009_gm $s2009_wmat $s2009_csf $s2009_vent $s2009_othr $s2009_unkn )

    echo "++ Attaching labeltable to:   $ff"

    @MakeLabelTable                                \
        -lab_file "${tempref2009}" 1 3             \
        -labeltable $s2009_renum_lt                \
        -dset $ff

end

\rm ${tempref2009}

echo "\n\n++ OK through '2009' dsets.\n\n"

exit

# -------------------------------------------------------------------
SHOW_HELP:

cat << EOF
---------------------------------------------------------------------

    This script is now run at the end of modern @SUMA_Make_Spec_FS
    commands, or it can be run separately for data that had been
    processed using older versions of AFNI.

    PURPOSE:

    This program will take the aparc+aseg.nii.gz and
    aparc.a2009s+aseg.nii.gz parcellation files produced by FreeSurfer
    (FS) and converted to NIFTI by @SUMA_Make_Spec_FS, and make the
    following related data sets (with the same prefix) for each: 

        + A copy of the whole parcellation/segmentation and renumber the
          ROIs to be smaller (for colorbar representation); this file
          is called "*_REN_all.nii.gz".

        + Tissue segmentation maps (not binary, but containing the
          renumbered ROI values), based on our best guesses of of what
          each is, from both the 'mri_binarize' command in FS and our
          own supplementary reading of the ROI names. The following
          files are output:

            *_REN_gm.nii.gz    :gray matter
            *_REN_wmat.nii.gz  :white matter
            *_REN_csf.nii.gz   :cerebrospinal fluid
            *_REN_vent.nii.gz  :ventricles and choroid plexus
            *_REN_othr.nii.gz  :optic chiasm, non-WM-hypointens, etc.
            *_REN_unkn.nii.gz  :FS-defined "unknown", with voxel value >0

        + A labeltable of the new ROI values: "*_REN_all.niml.lt".
          This labeltable is attached to each of the *_REN_*.nii.gz
          files.

    RUNNING:

    At the moment, the function just takes a single, required
    argument, which is the location of the 'SUMA/' directory created
    by @SUMA_Make_Spec_FS.  The program also requires being able to
    see the two 'afni_fs_aparc+aseg_*.txt' files in the AFNI binary
    directory: that is where the information on renumbering the FS
    ROIs is).

        \$ @SUMA_renumber_FS SUMA_DIR

    where SUMA_DIR is either the full or relative path to the 'SUMA/'
    directory (including that directory name).

    EXAMPLE:
    
        \$ @SUMA_renumber_FS /data/study/SUBJ_01/FS/SUMA
___________________________________________________________________________

EOF
exit
