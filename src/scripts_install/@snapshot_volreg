#!/bin/tcsh

# help?

if( $#argv < 2 )then
  echo
  echo "This script will make a JPEG image showing the edges of an"
  echo "EPI dataset overlayed on an anatomical dataset.  The purpose"
  echo "is to let the user judge the quality of the 3D registration"
  echo
  echo "Usage: @snapshot_volreg ANATDataset EPIdataset [jname] [xscreen]"
  echo
  echo "Do NOT put a sub-brick index (such as '[0]') on the EPIdataset"
  echo "name -- the script will automatically only use the '[0]' volume."
  echo
  echo "The optional third argument is the name of the output JPEG"
  echo "file -- if it does not end in '.jpg', that suffix will be added."
  echo
  echo "The fourth optional argument is the screen number of an"
  echo "ALREADY RUNNING copy of Xvfb, as in"
  echo "  Xvfb :8 -screen 0 1024x768x24 &"
  echo "If you do NOT supply this number (8 in the example), then"
  echo "the script will start its own Xvfb (on 'screen' 9), use it"
  echo "once, and then stop it. If you are going to run this script"
  echo "many times in a row, starting and stopping your own Xvfb"
  echo "instance will speed things up."
  echo
  echo "This script is new [Nov 2016] and will probably evolve into"
  echo "something better (fondly do we hope)."
  echo
  echo "-- Author: The Mad Allineator"
  echo
  exit 0
endif

# control variables

setenv AFNI_DONT_LOGFILE YES

# check if all the needed auxiliary programs exist

set nerr = 0
set errm = "** ERROR:"

set plist = ( Xvfb djpeg cjpeg pnmcat pbmtext pamcomp pamstretch pbmtopgm )
foreach pppp ( $plist )
  set wwww = `which $pppp`
  if( $status != 0 )then
    @ nerr++
    set errm = "$errm $pppp"
  endif
end
if( $nerr > 0 )then
  echo "$errm -- not found in path -- @snapshot_volreg fails"
  exit 1
endif

# set the prefix for the anat and epi datasets

set adset = $argv[1]
set abase = $adset:t
set anat  = `basename $abase .gz`
set anat  = `basename $anat  .nii`
set anat  = `basename $anat  .HEAD`
set anat  = `basename $anat  .BRIK`
set anat  = `basename $anat  +tlrc`
set anat  = `basename $anat  +orig`
set anat  = `basename $anat  +acpc`
if( $abase == $anat.nii.gz )then
  set asuff = .nii.gz
else if( $abase == $anat.nii )then
  set asuff = .nii
else
  set asuff = ""
endif
set anat  = $anat:r

set edset = $argv[2]
set epi   = `basename $edset .gz`
set epi   = `basename $epi   .nii`
set epi   = `basename $epi   .HEAD`
set epi   = `basename $epi   .BRIK`
set epi   = `basename $epi   +tlrc`
set epi   = `basename $epi   +orig`
set epi   = `basename $epi   +acpc`
set epi   = $epi:r

# set output image prefix

if( $#argv > 2 )then
  set jnam = $argv[3]
  set jnam = `basename "$jnam" .jpg`
  set jnam = `basename "$jnam" .JPG`
  set jnam = `basename "$jnam" .jpeg`
  set jnam = `basename "$jnam" .JPEG`
else
  set jnam = $anat.$epi
endif

# Are we re-using Xvfb?

unset xscreen
unset killX
if( $#argv > 3 )then
  set xscreen = $argv[4]
endif

# if( ! -f $adset || ! -f edset )then
#   if( ! -f $adset ) echo "** ERROR: @snapshot_volreg can't find $adset"
#   if( ! -f $edset ) echo "** ERROR: @snapshot_volreg can't find $edset"
#   exit 0
# endif

# set some AFNI GUI things

setenv AFNI_NOSPLASH          YES
setenv AFNI_SPLASH_MELT       NO
setenv AFNI_LEFT_IS_LEFT      YES
setenv AFNI_IMAGE_LABEL_MODE  5
setenv AFNI_IMAGE_LABEL_SIZE  2
setenv AFNI_ENVIRON_WARNINGS  NO
setenv DISPLAY                :${xscreen}

unset noclobber

# resample the EPI to the anat grid

3dAllineate -input  ${edset}'[0]'     \
            -master ${adset}          \
            -prefix zzzerm.epiR.nii   \
            -1Dparam_apply IDENTITY   \
            -final cubic

# find edges in the EPI

3dedge3 -input zzzerm.epiR.nii -prefix zzzerm.epiE.nii

# get the EPI automask and apply it to the edgized EPI

3dAutomask -q -prefix zzzerm.epiM.nii -clfrac 0.333 -dilate 5 zzzerm.epiR.nii
3dcalc -a zzzerm.epiE.nii -b zzzerm.epiM.nii -expr 'a*b' -prefix zzzerm.epiEM.nii

# get the lower and upper thresholds for the edgized EPI

set epp = `3dBrickStat -non-zero -percentile 20 60 80 zzzerm.epiEM.nii`
set eth = $epp[2]
set emx = $epp[4]

# start the X virtual frame buffer on display #xscreen

if( $?xscreen == 0 )then
  set xscreen = 9
  set killX   = 1
  Xvfb :${xscreen} -screen 0 1024x768x24 &
endif

# run AFNI to make the 3 overlay images

afni -noplugins -no_detach                                  \
     -com "SWITCH_UNDERLAY ${anat}${asuff}"                 \
     -com "SWITCH_OVERLAY zzzerm.epiEM.nii"                 \
     -com "SET_PBAR_ALL +99 1 Plasma"                       \
     -com "SET_FUNC_RANGE $emx"                             \
     -com "SET_THRESHNEW $eth *"                            \
     -com "SEE_OVERLAY +"                                   \
     -com "SET_XHAIRS OFF"                                  \
     -com "OPEN_WINDOW sagittalimage opacity=6"             \
     -com "OPEN_WINDOW axialimage opacity=6"                \
     -com "OPEN_WINDOW coronalimage opacity=6"              \
     -com "SAVE_JPEG sagittalimage zzzerm.sag.jpg blowup=2" \
     -com "SAVE_JPEG coronalimage  zzzerm.cor.jpg blowup=2" \
     -com "SAVE_JPEG axialimage    zzzerm.axi.jpg blowup=2" \
     -com "QUITT"                                           \
     ${adset} zzzerm.epiEM.nii

# stop Xvfb

if( $?killX ) kill %1

# convert the output JPEGs to PNMs for manipulation

djpeg zzzerm.sag.jpg > zzzerm.sag.pnm
djpeg zzzerm.cor.jpg > zzzerm.cor.pnm
djpeg zzzerm.axi.jpg > zzzerm.axi.pnm

# cat them together, make a text label, overlay it, make output JPEG

pnmcat -lr -jcenter -black zzzerm.sag.pnm zzzerm.axi.pnm zzzerm.cor.pnm   > zzzerm.pnm
pbmtext -nomargins -builtin fixed "$jnam"   | pbmtopgm 1 1 | pamstretch 2 > zzzerm.t1.pgm
pbmtext -nomargins -builtin fixed "<- Left" | pbmtopgm 1 1                > zzzerm.t2.pgm
pamcomp -align=right -valign=bottom zzzerm.t1.pgm zzzerm.pnm              > zzzerm.t3.pnm
pamcomp -align=right -valign=top    zzzerm.t2.pgm zzzerm.t3.pnm | cjpeg -quality 95 > "$jnam.jpg"

# delete the trash data

\rm -f zzzerm.*

echo "@snapshot_volreg output image = $jnam.jpg"
exit 0
