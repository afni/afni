#!/usr/bin/env tcsh

set stat = 0
set sdir = "$PWD"

# [PT: May  1, 2020] updated version
# [RR: Jan 14, 2025] call tcsh via env
set demo = IBT_DATASETS

goto PARSE
RET_PARSE:

if ( -d ./$demo) then
echo ""
echo "ERROR:"
echo "   Directory ./$demo exists already"
echo "   If you want to recreate it, remove it with:"
echo "\rm -rf ./$demo"
echo "   then run `basename $0` $argv[*] again."
echo ""
echo "Otherwise to run demos, see content of ./$demo/README.txt"
echo ""
goto END
endif

echo "++ Going to fetch demo:  ${demo}"

if ($use_curl == -1) then
   which curl
   if ($status) then
      set use_curl = 0;
   else
      set use_curl = 1;
   endif
endif

if ($use_curl == 0) then
   wget https://afni.nimh.nih.gov/pub/dist/tgz/$demo.tgz
else
   curl -O https://afni.nimh.nih.gov/pub/dist/tgz/$demo.tgz
endif
tar xvzf $demo.tgz
if ( $status ) then
   echo ""
   echo "** failure to download or extract $demo.tgz"
   echo ""
   set stat = 1
   goto END
endif

cd $demo
   echo "********************************************************"
   echo "A brief description is provided in ./$demo/README.txt "
   #echo "---------------------------------------------------------"
   #PT: Normally here you can consider running one or all of the"
   #scripts and quide the users to look at the results.
   #You could eventually script the whole deal to include self "
   #executing AFNI/SUMA commands to show results.
   echo "********************************************************"
cd -
goto END

PARSE:
   set Narg = $#
   set use_curl = -1
   set cnt = 1
   while ($cnt <= $Narg)
		set donext = 1;
      if ($donext && "$argv[$cnt]" == "-echo") then
         set echo
         set donext = 0; goto NEXT		
      endif
      if ($donext && "$argv[$cnt]" == "-curl") then
         set use_curl = 1
         set donext = 0; goto NEXT		
      endif
      if ($donext && "$argv[$cnt]" == "-wget") then
         set use_curl = 0
         set donext = 0; goto NEXT		
      endif
      if ($donext && ("$argv[$cnt]" == "-h" || "$argv[$cnt]" == "-help")) then
         goto HELP
         set donext = 0;	 goto NEXT	
      endif
      if ($donext == 1) then
         echo "Error: Option or parameter '$argv[$cnt]' not understood"
         goto END
      endif
      
      NEXT:
		@ cnt ++
	end
   
goto RET_PARSE

HELP:
   echo "Installs the demo archive for AFNI's macaque-analysis demo."
   echo "After the archive is downloaded and unpacked, see its README.txt"
   echo "for details."
   echo "Options:"
   echo "[-wget]: Use wget to download archive. Script chooses by default"
   echo "         with preference for curl"
   echo "[-curl]: Use curl to download archive. Script chooses by default"
   echo "         with preference for curl"
   goto END

BEND:
   echo "Failed"
   set stat = 1
   goto END
   
END:
   exit $stat
