#!/bin/tcsh

# cheap way to write SUMA colormap, as long as it has the same name in
# the AFNI GUI

@global_parse `basename $0` "$*" ; if ($status) exit 0

#set version   = "0.0";  set rev_dat   = "July 4, 2022"
# [PT] creation of this script, which will assist the
#      chauffeur_suma.py program for the APQC HTML
#
set version   = "0.01";  set rev_dat   = "July 4, 2022"
# [PT] some new options; clean up initial functionality
#
# ----------------------------------------------------------------

set abbrev = "MakeColorBar"

# ----------------------- set defaults --------------------------

set input     = ""
set opref     = ""
set odir      = "."

set pppp      = "`3dnewid -fun11`"
set wdir_base = "__wdir_${abbrev}"
set wdir_name = "${wdir_base}_${pppp}"

set cbar_name = ""
set saveim_pbar_bot  = ""
set saveim_pbar_top  = ""
set saveim_ulay_bot  = "-pbar_saveim_ulay_bot 0"    # just placeholder, for now
set saveim_ulay_top  = "-pbar_saveim_ulay_top 0"    # just placeholder, for now

set overwrite  = "-overwrite"

set DO_CLEAN  = 1                       # default: keep working dir

# ------------------- process options, a la rr ----------------------

if ( $#argv == 0 ) goto SHOW_HELP

set ac = 1
while ( $ac <= $#argv )
    # terminal options
    if ( ("$argv[$ac]" == "-h" ) || ("$argv[$ac]" == "-help" )) then
        goto SHOW_HELP
    endif
    if ( "$argv[$ac]" == "-ver" ) then
        goto SHOW_VERSION
    endif

    if ( "$argv[$ac]" == "-echo" ) then
        set echo

    # ----------- required

    else if ( "$argv[$ac]" == "-cbar_name" ) then
        if ( $ac >= $#argv ) goto FAIL_MISSING_ARG
        @ ac += 1
        set cbar_name = "$argv[$ac]"

    else if ( "$argv[$ac]" == "-prefix" ) then
        if ( $ac >= $#argv ) goto FAIL_MISSING_ARG
        @ ac += 1
        set opref = `basename "$argv[$ac]"`
        set odir  = `dirname  "$argv[$ac]"`

    # other opts

    # [PT: July 4, 2022] these '-pbar_saveim_* ..' opts are for
    # putting the correct information (or zeros, to just be 'null', in
    # some cases) into the accompanying text file for the colorbar
    else if ( "$argv[$ac]" == "-pbar_saveim_pbar_bot" ) then
        if ( $ac >= $#argv ) goto FAIL_MISSING_ARG
        @ ac += 1
        set saveim_pbar_bot = "-pbar_saveim_pbar_bot $argv[$ac]"

    else if ( "$argv[$ac]" == "-pbar_saveim_pbar_top" ) then
        if ( $ac >= $#argv ) goto FAIL_MISSING_ARG
        @ ac += 1
        set saveim_pbar_top = "-pbar_saveim_pbar_top $argv[$ac]"

    else if ( "$argv[$ac]" == "-pbar_saveim_ulay_bot" ) then
        if ( $ac >= $#argv ) goto FAIL_MISSING_ARG
        @ ac += 1
        set saveim_ulay_bot = "-pbar_saveim_ulay_bot $argv[$ac]"

    else if ( "$argv[$ac]" == "-pbar_saveim_ulay_top" ) then
        if ( $ac >= $#argv ) goto FAIL_MISSING_ARG
        @ ac += 1
        set saveim_ulay_top = "-pbar_saveim_ulay_top $argv[$ac]"

    else if ( "$argv[$ac]" == "-wdir_name" ) then
        if ( $ac >= $#argv ) goto FAIL_MISSING_ARG
        @ ac += 1
        set wdir_name = "$argv[$ac]"

        set check     = `echo "${wdir_name}" | grep '/'`
        if ( "${check}" != "" ) then
            echo "\n\n** ERROR: -wdir_name arg must not have '/':"
            echo "   '${wdir_name}'\n\n"
            goto BAD_EXIT
        endif

    else if ( "$argv[$ac]" == "-no_clean" ) then
        set DO_CLEAN = 0
        
    else
        echo "\n\n** ERROR: unexpected option #$ac = '$argv[$ac]'\n\n"
        goto BAD_EXIT
        
    endif
    @ ac += 1
end

# =======================================================================
# ============================ ** SETUP ** ==============================
# =======================================================================

if ( "${cbar_name}" == "" ) then
    echo "** ERROR: missing cbar name. Use '-cbar_name ..'"
    goto BAD_EXIT
endif

# ===================== output dir + wdir =======================
 
echo "++ Start 3dLocalUnifize work"

# check output directory, use input one if nothing given

if ( ! -e "${odir}" ) then
    echo "++ Making new output directory: ${odir}"
    \mkdir -p "${odir}"
endif

set wdir = "${odir}/${wdir_name}"

# make the working directory
if ( ! -e "${wdir}" ) then
    echo "++ Making working directory: ${wdir}"
    \mkdir -p "${wdir}"
else
    echo "+* WARNING: Somehow found a premade working directory (?):"
    echo "      ${wdir}"
endif

# ======================= main program work ===========================

echo "++ Work on making a colorbar, with text"

set tpref = __tmp_dset_for_cbar

# small test dset, just to have one
3dcalc ${overwrite}                                                          \
    -a       jRandomDataset:2,2,2,1                                          \
    -expr    'a'                                                             \
    -prefix  ${wdir}/${tpref}.nii.gz

cd "${wdir}"

# create cbar, and create SUMA-specific cbar range notes in the
# accompanying text
set ocbar = ${opref}.jpg
set otxt  = ${opref}.txt
@chauffeur_afni                                                              \
    -ulay         ${tpref}.nii.gz                                            \
    -olay         ${tpref}.nii.gz                                            \
    -cbar         ${cbar_name}                                               \
    -prefix       ${tpref}                                                   \
    -no_cor                                                                  \
    -no_sag                                                                  \
    -save_ftype   JPEG                                                       \
    -pbar_saveim  ${ocbar}                                                   \
    ${saveim_pbar_bot} ${saveim_pbar_top}                                    \
    ${saveim_ulay_bot} ${saveim_ulay_top} 

# ----------- finish

\cp ${otxt} ../.
\cp ${ocbar} ../.

# ------------------------- wrap up ----------------------------

# move out of wdir to the odir
cd ..
set whereout = "$PWD"

if ( "$DO_CLEAN" == "1" ) then
    echo "\n+* Removing the working dir: '${wdir_name}'\n"
    \rm -rf "${wdir_name}"
else
    echo "\n++ NOT removing the working dir: '${wdir_name}'\n"
endif

echo ""
echo "++ DONE! View the finished, axialized product:"
echo "     ${whereout}/${opref}"
echo ""


goto GOOD_EXIT

# ========================================================================
# ========================================================================

SHOW_HELP:
cat << EOF
-------------------------------------------------------------------------

OVERVIEW ~1~

**Just an adjunct program**

This makes a colorbar image, primarily for chauffeur_suma.py to use in
its APQC HTML image generation.

ver   : ${version}
date  : ${rev_dat}
auth  : PA Taylor (SSCC, NIMH, NIH)


OPTION LIST ~1~

-h 
-help
-ver 
-echo

-cbar_name             CBAR
-prefix                PREF

-pbar_saveim_pbar_bot  OBOT
-pbar_saveim_pbar_top  OTOP
-pbar_saveim_ulay_bot  UBOT
-pbar_saveim_ulay_top  UTOP

-wdir_name             WDIR
-no_clean 


EXAMPLES ~1~

  1) Make a Viridis cbar image, with (hopefully appropriate) ranges
    adjunct_make_cbar2                                                       \
        -cbar_name  Viridis                                                  \
        -prefix     img_Viridis                                              \
        -pbar_saveim_pbar_bot  -3                                            \
        -pbar_saveim_pbar_top   1
EOF

# ----------------------------------------------------------------------

    goto GOOD_EXIT

SHOW_VERSION:
   echo "version  $version (${rev_dat})"
   goto GOOD_EXIT

FAIL_MISSING_ARG:
    echo "** ERROR! Missing an argument after option flag: '$argv[$ac]'"
    goto BAD_EXIT

BAD_EXIT:
    exit 1

GOOD_EXIT:
    exit 0
