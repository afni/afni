#!/bin/tcsh -f

set CurDir = $PWD

if ("$1" == "-h" || "$1" == "-help" ) then
   goto USAGE
endif

goto PARSE_COMMAND
Ret_PARSE_COMMAND:

SET_PACKAGE:
set cextra = ""
if ("$thishost" == "") then
   set thishost = `hostname`
endif
if ("$package" == "") then
   if ( "${thishost}" =~ eomer_old* ) then
     if ($bitset == 0) then
         set bitset = 64
         set b64 = '_64'
         echo "Using -64 as default for `hostname`"
     endif 
     set package = macosx_10.6_Intel${b64}
      if ($lesstifing == 0) then
         echo "Using -motif as default for `hostname`"
         set lesstifing = -1
      endif
      set jpega = 1
      set lpng = 1
   else if ( "${thishost}" =~ airmog* || \
             "${thishost}" =~ saruman* || \
             "${thishost}" =~ eomer*) then
      set bitset = 64
      set b64 = '_64'
      set mcwmalloc = 1
      set package = macosx_10.7_Intel${b64}
      if ($openmp == 0) then
         echo "Setting openmp to 1 as as default for `hostname`"
         set openmp = 1
      endif
      if ( "${thishost}" =~ eomer*) then
         set dynXft = 1
         set dynXm = 1
         set dynjpeg = 1 
         set glib2 = 1 
      endif
   else if ( "${thishost}" =~ ilmarin* ) then
      if ($bitset == 0) then
         set bitset = 64
         set b64 = '_64'
         echo "Using -64 as default for `hostname`"
      endif 
      set package = macosx_10.5_Intel${b64}
      if ($lesstifing == 0) then
         echo "Using -motif as default for `hostname`"
         set lesstifing = -1
      endif
      if ($openmp == 0) then
         echo "Setting openmp to 1 as as default for `hostname`"
         set openmp = 1
      endif  
   else if ( "${thishost}" =~ elrond* ) then
      #can't compile there
      echo "Machine not setup for compiling"
      goto END
   else if ( "${thishost}" =~ morwen* ) then
      set package = linux_xorg7
      #echo "Forcing use of localX"
      #set localX = 1
   else if ( "${thishost}" =~ gothmog* ) then
      set package = linux_openmp_64
      echo "Forcing use of localX, -expat_sh, -fontconf, -fixccold"
      set localX = 1
      set fixccold = 1
      set expat_sh = 1
      set fontconf = 1
      set user_bin = '/home/ziad/abin'
   else if ( "${thishost}" =~ morgoth* ) then
      set package = linux_openmp_64
      echo "Forcing use of -expat_sh, -fontconf -fixccold -dynxlibs"
      set localX = -1
      set fixccold = 1
      set expat_sh = 1
      set fontconf = 1
      set dynxlibs = 1
      set user_bin = '/home/ziad/abin'
   else if ( "${thishost}" =~ manwe* ) then
      if ($lesstifing == 0) then
         echo "Using -lesstif as default for `hostname`"
         set lesstifing = 1
      endif
      if ($bitset == 0) then
         set bitset = 64
         set b64 = '_64'
         echo "Using -64 as default for `hostname`"
      endif 
      set package = linux_xorg7${b64}
   else if ( "${thishost}" =~ sauron* ) then
      set package = linux_gcc32
   else if ( "${thishost}" =~ kampos* ) then
      set package = solaris29_suncc_64
   else if ( "${thishost}" =~ grima* ) then
      set package = linux_glibc22
   else if ( "${thishost}" =~ gimli* ) then
      set package = macosx_10.5_Intel
      #change to lesstif if not set by options
      if (0 && $lesstifing == 0) then
         echo "Using -lesstif as default for `hostname`"
         set lesstifing = 1
      else
         echo "Forcing use of localX"
         set localX = 1
      endif
   else if ( "${thishost}" =~ Kullervo* ) then
      if ($openmp == 0) then
         set openmp = 1
      endif
      if ($bitset == 0) then
         set bitset = 64
         set b64 = '_64'
         echo "Using -64 as default for `hostname`"
     endif 
     set package = macosx_10.6_Intel${b64}
      if ($lesstifing == 0) then
         echo "Using -motif as default for `hostname`"
         set lesstifing = -1
      endif
      set dynxlibs = 1
      set ljpeg = 1
   else 
      echo "Don't know what package to use for `hostname`"
      goto END
   endif
endif

#if not set yet, use motif
if ($lesstifing == 0) set lesstifing = -1
#You should only use -1 and or 1 depending on what is in the Makefile for a machine
#Do not set openmp=-1 or 1 with no regard for the makefile for the machine
#if ($openmp == 0) set openmp = -1

VARS:
set tDdir = $tdir.$Date
set tdir = b.$tDdir       
set sdir = $tdir/src
set makelog = $CurDir/$tdir/MakeLog.$package.$Date
set warnlog = $CurDir/$tdir/Warning.$package.$Date
set errlog = $CurDir/$tdir/Error.$package.$Date

PUT_BACK:
if ($put_back) then
   if ( ! -d $sdir) then
      echo "Could not find src dir!"
      echo "Missing: $sdir"
      echo "You must be at the level where @new_dist was first called"
      goto END
   endif
   cd $sdir
   zget
   if ($status) then
      echo "Error: Conflicts found!"
      goto END
   endif
   echo "Enter ok if all is well"
   set ok = $<
   if ("$ok" != "ok") then
      echo "Aborting"
      goto END
   else
      echo "zputting..."
   endif
   zput
   goto END
endif


GET_SRC:
if ($fromcvs == "yes") then
   CHECK_TDIR:
   #prepend b. so that you won't kill something useful by mistake
   if (-d b.$tDdir) rm -rf b.$tDdir >& /dev/null
   mkdir -p $tdir
   if ($Date != "now") then
      #Use export and you can't check back in...
      cvs export -D $Date -d $tdir AFNI
   else
      cvs checkout -D $Date -d $tdir AFNI
   endif
else if ($fromcvs == "no") then
   CHECK_TDIR:
   #prepend b. so that you won't kill something useful by mistake
   if (-d b.$tDdir) rm -rf b.$tDdir >& /dev/null
   mkdir -p $tdir/AFNI
   \rm -f afni_src.tgz
   wget http://afni/pub/dist/tgz/afni_src.tgz
   tar xvzf afni_src.tgz
   mv afni_src $tdir/src
else
   if ( ! -d $fromcvs ) then
      tar xvzf $fromcvs
      set tdir = $fromcvs:r
   else
      set tdir = $fromcvs
   endif
   if ( ! -d $tdir/src ) then
      echo "Can't find $tdir/src in $fromcvs"
   endif
endif

CHECK_MAKEFILE:
if ( ! -f $sdir/Makefile.$package ) then
   echo "Can't find package makefile: $sdir/Makefile.$package"
   goto END
endif
set mfile = Makefile.$package
cd $sdir
if ($withgifti) then
  sed 's/# USE_GIFTI/USE_GIFTI/' Makefile.$package    \
   | sed 's/# LGIFTI/LGIFTI/' > Makefile
else
   cp $mfile Makefile
endif

#gcc path
if ("${thishost}" =~ airmog* || \
    "${thishost}" =~ saruman*  ) then
   sed 's:/usr/local/bin/gcc:/usr/bin/gcc:g' Makefile > ___mm
   mv ___mm Makefile
endif   

#Lesstiffing
if ($lesstifing == 1) then
   #the old way (force non-static linking in second line below)
   #sed "s/CEXTRA = /CEXTRA = -DUSING_LESSTIF /" Makefile > ___mm
   #sed "s;[/a-zA-Z0-9/]*libXm.a;-lXm;" ___mm > Makefile
   #the new way
   sed 's/# USE_LESSTIF/USE_LESSTIF/' Makefile > ___mm
   mv ___mm Makefile
endif

#Turn off openmp, require gcc4.2 which does not work with fink yet
if ($openmp < 1) then
   sed 's/^OMPFLAG/# OMPFLAG/' Makefile > ___mm
            #use ~ as a char flag for where to insert the new line.
            #~ is unlikely to occur in the Makefiles (\a does not work on mac)
   mv ___mm Makefile
endif

if ($openmp > 0) then
   sed 's/^CCMIN/OMPFLAG = -fopenmp -DUSE_OMP~CCMIN/' Makefile | tr '~' '\n' \
      > ___mm
   mv ___mm Makefile
endif


#LocalX?
if ($localX == 1) then
   sed 's/# USE_LOCAL_X_TREE/USE_LOCAL_X_TREE/' Makefile > ___mm
   mv ___mm Makefile
else if ($localX == -1) then
   sed "s/^\ *USE_LOCAL_X_TREE/#USE_LOCAL_X_TREE/" Makefile > ___mm
   mv ___mm  Makefile
endif


if ( $optimize_problem ) then
  sed 's/-O1//' Makefile > ___mm
  mv ___mm Makefile
  sed 's/-O2//' Makefile > ___mm
  mv ___mm Makefile
  sed 's/-O3//' Makefile > ___mm
  mv ___mm Makefile
endif

if ( $fixccold ) then
  sed 's/gcc -V 34/gcc/' Makefile > ___mm
  mv ___mm Makefile
endif

if ( $expat_sh ) then
  sed 's/.usr.lib64.libexpat.a/-lexpat/' Makefile > ___mm
  mv ___mm Makefile
endif

if ( $fontconf ) then
  sed 's/libXm.a/libXm.a -lfontconfig/' Makefile > ___mm
  mv ___mm Makefile
  sed 's/-lXm /-lXm -lfontconfig /' Makefile > ___mm
  mv ___mm Makefile
endif

if ( $jpega ) then
  sed 's:XLIBS =:XLIBS = $(XROOT)/lib/libjpeg.a :' Makefile > ___mm
  mv ___mm Makefile
endif

if ( $lpng ) then
  sed 's/-lXft/-lXft -lpng/g'  Makefile > ___mm
  mv ___mm Makefile
endif

if ( $ljpeg ) then
  sed 's/-lXft/-lXft -ljpeg/g'  Makefile > ___mm
  mv ___mm Makefile
endif

if ( $lpng ) then
  sed 's/-lXft/-lXft -lpng/g'  Makefile > ___mm
  mv ___mm Makefile
endif

if ($dynXft == 1) then
   sed 's:/sw/lib/xft2/lib/libXft.a:-lXft:g' Makefile > ___mm
   mv ___mm Makefile
endif

if ($dynXm == 1) then
   sed 's:/sw/lib/libXm.a:-lXm:g' Makefile > ___mm
   mv ___mm Makefile
endif

if ( $dynxlibs ) then
   sed 's/# XLIBS = -lXm -lXt/ XLIBS = -lXm -lXt/g' Makefile > ___mm
   mv ___mm Makefile
endif

if ( $dynjpeg == 1) then
   sed 's:/sw/lib/libjpeg.a:-ljpeg:g' Makefile > ___mm
   mv ___mm Makefile
endif

if ($glib2 == 1) then
   sed 's: -lglib : -lglib-2.0 :g' Makefile | \
   sed '/libglib.dylib/d' | \
   sed '/libglib.la/d'          > ___mm
   mv ___mm Makefile
endif


#change bin directory to full path mode and put it in tdir/abin or where user specifies
if ("$user_bin" != "") then
   set usebin = $user_bin
else
   set usebin = ${PWD:h}/abin
endif

set ll = "s:INSTALLDIR\( \)*=\(.\)*:INSTALLDIR = ${usebin}:"
sed "$ll" Makefile > ___mm
mv ___mm  Makefile

#append extra compile options if needed
if ($extraCCopts !~ "") then
   set ll = "s:CEXTRA\( \)*=:CEXTRA = ${extraCCopts} :"
   sed "$ll" Makefile > ___mm
   mv ___mm  Makefile
endif

if ($mcwmalloc == 1) then
   #Make sure it is there
   set ll = "s:CEXTRA\( \)*=\(.\)*:CEXTRA = -DUSE_TRACING  -UDONT_USE_MCW_MALLOC:"
   sed "$ll" Makefile | sed 's/-DDONT_USE_MCW_MALLOC//g'> ___mm
   mv ___mm  Makefile
else if ($mcwmalloc == -1) then
   #Make sure it is not there
   set ll = "s:CEXTRA\( \)*=\(.\)*:CEXTRA = -DDONT_USE_MCW_MALLOC:"
   sed "$ll" Makefile | sed 's/-UDONT_USE_MCW_MALLOC//g' > ___mm
   mv ___mm  Makefile
endif

if ($buildR == 1) then
   tcsh ./@RmakeOpts
   if ($status) then
      echo "Warning: R C programs cannot be built"
      set buildR = 0
   else
      echo "include Makefile.R.INCLUDE" >> Makefile 
   endif
endif

#Now create a copy in SUMA and avovk
cd SUMA
./@MakeLocalMake
cd ../avovk
./@MakeLocalMake

cd $CurDir

ARCHIVE:
if ($archive) then
   tar cvzf $tdir.tgz $tdir
endif

BUILD:
if ($buildX) then   
   if ( ! -d ./X) mkdir -p ./X
   if ($Date != "now") then
      #Use export and you can't check back in...
      cvs export -D $Date -d X X
   else
      cvs checkout -D $Date -d X X
   endif
   if ( ! -d /usr/local/afniX ) mkdir -p /usr/local/afniX
   if ( ! -d /usr/local/afniX ) then
      echo "Error: /usr/local/afniX could not be created"
      goto END      
   endif
   cd ./X
   if ($bitset == 64) then
      set lop = '-lib64'
   else
      set lop = '-lib32'
   endif
   tcsh ../$tdir/src/@build_afni_Xlib $lop -afniX openmotif libXt
   if (  ! -f /usr/local/afniX/lib/libXm.a && \
         ! -f /usr/local/afniX/lib64/libXm.a ) then
      echo "Could not build libraries"
      goto END
   endif
   cd $CurDir
endif

if ($localX == 1) then
   if (  ! -f /usr/local/afniX/lib/libXm.a && \
         ! -f /usr/local/afniX/lib64/libXm.a ) then
      echo "Could not find X libraries, consider using -buildX"
      goto END
   endif
endif
if ($build) then
   cd $sdir
   if ($buildR) then
      make vastness 3dTsmoothR toyR |& tee ${makelog}
   else
      make vastness |& tee ${makelog}
   endif
   if ($buildVOVK) then
      cd avovk
      make all
      cd ../ 
   endif
   
endif

CHECK:
if ($build) then
   \grep warning ${makelog} | \
      \grep ' is ' | \grep ' used ' | \grep 'uninitialized' | \
      \grep ' function'            > ${warnlog}
   \grep warning ${makelog} | \
      \grep ' may ' | \grep ' used ' | \grep 'uninitialized' | \
      \grep ' function'                             >> ${warnlog}      
    \grep '\*\*\*' ${makelog} > ${errlog}
    set m = `wc $errlog`
    if ($m[3] > 0) then
      echo ""
      echo "************************"
      echo "Make errors found!"
      echo "See $errlog for details"
      echo "************************"
      echo ""
      goto END
    endif
    set m = `wc $warnlog`
    if ($m[3] > 0) then
      echo ""
      echo "------------------------"
      echo "Uninitialization found!"
      echo "See $warnlog for details"
      echo "------------------------"
      echo ""
      goto END
    endif
    
   echo ""
   echo "Compilation honky dory."
   echo ""
endif

CHECK_SCRIPT:
   cd $CurDir
   set frun = `\which @new_dist`
   set fref = "$tdir/src/SUMA/@new_dist.ref"
   set dd = `\diff -q $frun $fref`
   if ($status) then
      echo "Executable $frun differs from "
      echo "CVS stored version $fref"
      echo "Consider which needs to be updated"
      echo "Try:"
      echo "diff $frun $fref"
      echo ""
   endif 
   cd -  
   goto END


PARSE_COMMAND:
   
   #continue parsing for new options
   set Narg = $#
   set cnt = 1
   set Date = "now"
   set tdir = ""
   set fromcvs = "yes"   
   set withgifti =  1
   set build = 1
   set package = ''
   set archive = 1
   set put_back = 0
   set extraCCopts = "-g -Wuninitialized"
   set buildR = 1
   set user_bin = ""
   set lesstifing = 0
   set openmp = 0  
   set b64 = ""
   set bitset = 0;
   set thishost = ''
   set buildVOVK = 1
   set buildX = 0
   set localX = 0
   set optimize_problem = 0
   set fixccold = 0
   set expat_sh = 0
   set fontconf = 0
   set jpega = 0
   set ljpeg = 0
   set lpng = 0
   set dynxlibs = 0
   set mcwmalloc = 0
   set dynXft = 0
   set dynXm = 0
   set dynjpeg = 0
   set glib2 = 0
   while ($cnt <= $Narg)
      set donext = 1;
      if ($donext && "$argv[$cnt]" == "-echo") then
         set echo
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-optimize_problem") then
         set optimize_problem = 1;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-fixccold") then
         set fixccold = 1;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-mcwmalloc") then
         set mcwmalloc = 1;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-no_mcwmalloc") then
         set mcwmalloc = -1;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-expat_sh") then
         set expat_sh = 1;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-fontconf") then
         set fontconf = 1;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-jpega") then
         set jpega = 1;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-D") then
         set pLoc = $cnt      
         if ($pLoc == $Narg) then
            echo "Need date string yyyy-mo-dd after -D"
            goto END
         else
            @ cnt ++
            set Date = "$argv[$cnt]"
            set donext = 0   
         endif   
      endif
      if ($donext && "$argv[$cnt]" == "-tdir") then
         set pLoc = $cnt      
         if ($pLoc == $Narg) then
            echo "Need a directory for source tree after -tdir"
            goto END
         else
            @ cnt ++
            set tdir = "$argv[$cnt]"
            set donext = 0   
         endif   
      endif
      if ($donext && "$argv[$cnt]" == "-host") then
         set pLoc = $cnt      
         if ($pLoc == $Narg) then
            echo "Need a hostname after -host"
            goto END
         else
            @ cnt ++
            set thishost = "$argv[$cnt]"
            set donext = 0   
         endif   
      endif
      if ($donext && "$argv[$cnt]" == "-bindir") then
         set pLoc = $cnt      
         if ($pLoc == $Narg) then
            echo "Need a directory for binaries after -bindir"
            goto END
         else
            @ cnt ++
            set user_bin = "$argv[$cnt]"
            set donext = 0   
         endif   
      endif
      if ($donext && "$argv[$cnt]" == "-webdist") then
         set fromcvs = "no";
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-buildX") then
         set buildX = 1;
         set donext = 0;      
         if ( ! -d /usr/local/afniX ) mkdir -p /usr/local/afniX
         if ( ! -d /usr/local/afniX ) then
            echo "Error: /usr/local/afniX could not be created"
            echo "Better do:"
            echo "sudo mkdir -p /usr/local/afniX"
            echo "sudo chown $USER /usr/local/afniX"
            goto END      
         endif
      endif
      if ($donext && "$argv[$cnt]" == "-avovk") then
         set buildVOVK = 1;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-noavovk") then
         set buildVOVK = 0;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-localX") then
         set localX = 1;
         set donext = 0;      
      endif
      
      if ($donext && "$argv[$cnt]" == "-thisdist") then
         set pLoc = $cnt      
         if ($pLoc == $Narg) then
            echo "Need a .tgz archive after -thisdist"
            goto END
         else
            @ cnt ++
            set fromcvs = "$argv[$cnt]";
            set donext = 0;      
         endif
      endif
      if ($donext && "$argv[$cnt]" == "-lesstif") then
         set lesstifing = 1;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-64") then
         set b64 = '_64';
         set bitset = 64;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-32") then
         set b64 = '';
         set bitset = 32;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-motif") then
         set lesstifing = -1;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-openmp") then
         set openmp = 1;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-no_openmp") then
         set openmp = -1;
         set donext = 0;      
      endif
      if ($donext && "$argv[$cnt]" == "-put") then
         set put_back = 1;      
         set donext = 0;
      endif
      if ($donext && "$argv[$cnt]" == "-package") then
         set pLoc = $cnt      
         if ($pLoc == $Narg) then
            echo "Need a package name after -package"
            goto END
         else
            @ cnt ++
            set package = "$argv[$cnt]"
            set donext = 0   
         endif   
      endif
      if ($donext && "$argv[$cnt]" == "-gifti") then
         set withgifti = 1;
         set donext = 0;      
      endif 
      if ($donext && "$argv[$cnt]" == "-no_build") then
         set build = 0;
         set donext = 0;            
      endif 
      if ($donext && "$argv[$cnt]" == "-no_archive") then
         set archive = 0;   
         set donext = 0;   
      endif 
      if ($donext == 1) then
         echo "Error: Option or parameter '$argv[$cnt]' not understood"
         goto END
      endif
      
      @ cnt ++
   end
   if ("$tdir" == "") then
      if($bitset > 0) then
         set tdir = "AFNI.${bitset}"
      else
         set tdir = "AFNI"
      endif
   endif
   
   goto Ret_PARSE_COMMAND

USAGE:
   echo ""
   echo "Usage: `basename $0` "
   echo "Based on RickR's @build.local"
   echo " Options:"
   echo "   [-D DATE]: Retrieve code from date DATE yyyy-mm-dd"
   echo "              Default is now"
   echo "   [-no_build]: Do not compile"
   echo "   [-no_archive]: Do not create source archive"
   echo "   [-webdist]: Get source from web .tgz, not cvs"
   echo "   [-thisdist DIST]: Get source from a previously"
   echo "                     created @new_dist archive."
   echo "   [-package PACK]: Use Makefile.PACK to compile."
   echo "                    Default is a guess based on hostname"
   echo "   [-gifti]: Compile with GIFTI support, default depends on makefile"
   echo "   [-lesstif]: Do not use libXm.a and add -DUSING_LESSTIF"
   echo "   [-motif]: Do not use -lesstif"
   echo "       Each machine has its defaults. "
   echo "       Setting -lesstif or -motif would override them"
   echo "   [-openmp]: Turn on openmp"
   echo "   [-no_openmp]: Turn off openmp"
   echo "   [-tdir TDIR]: Put code in directory called b.TDIR.DATE"
   echo "                 Default is b.AFNI.now"
   echo "   [-bindir BDIR]: Put binaries in directory called BDIR"
   echo "                   Default is TDIR/abin"
   echo "   [-64]: Build 64 bit versions"
   echo "          only for eomer and ilmarin now"
   #echo "   [-put]: NOT TESTED YET Check changes back into cvs"
   #echo "           Script does a Cget before checking in."
   echo "   [-avovk|-noavovk]: [Build]/noBuild avovk code"
   echo "   [-host]: Provide the hostname"
   echo "   [-buildX]: Build X library locally, and use it"
   echo "              This only works on certain platforms"
   echo "   [-localX]: Use locally installed version of X"
   echo "              That local version would be the one"
   echo "              compiled with -buildX either in the same"
   echo "              `basename $0` command or from a previous one"
   echo "   [-optimize_problem]: turn off optimization"
   echo "   [-fixccold]: Turn of -V 34 for gcc"
   echo "   [-expat_sh]: Use .so for libexpat"
   echo "   [-fontconf]: Add -lfontconfig"
   echo "   [-jpega]: Add  $(XROOT)/lib/libjpeg.a"
   echo "   [-mcwmalloc]: Make sure MCW_MALLOC is used"
   echo "   [-no_mcwmalloc]: Make sure MCW_MALLOC is NOT used."
   goto END

   
END:
cd $CurDir
