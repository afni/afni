#Version of SUMA_Makefile with no ifdef statements

SUMALIB = libSUMA.a
AFNILIB = -lmri -lrickr
MAINCODE = SUMA

#Copy section below from marked section in SUMA_Makefile
 
SUMA_SRCS = SUMA_trackball.c SUMA_SVmanip.c SUMA_input.c SUMA_MiscFunc.c SUMA_IV_XYZextract.c	\
		 SUMA_IV_FaceSetsextract.c  SUMA_SurfNorm.c SUMA_DOmanip.c SUMA_StripPath.c 	\
		 SUMA_Load_Surface_Object.c SUMA_CreateDO.c SUMA_help.c SUMA_display.c SUMA_ParseCommands.c	\
		 SUMA_Engine.c SUMA_Surface_IO.c SUMA_VolData.c SUMA_niml.c SUMA_Color.c	\
		 SUMA_GeomComp.c SUMA_SphericalMapping.c SUMA_Algorithms.c
       
SUMA_SRCS_MAIN = SUMA_suma.c

SUMA_OBJS = ${SUMA_SRCS:.c=.o}
AFNI_OBJS = ../xutil.o ../LiteClue.o 
AFNI_3dOBJS = ../parser.o ../parser_int.o
SUMA_SRCS_OBJS = ${SUMA_SRCS_MAIN:.c=.o}

SUMA_HDRS = SUMA_Color.h SUMA_DOmanip.h SUMA_input.h SUMA_MiscFunc.h SUMA_suma.h SUMA_trackball.h	\
		 SUMA_define.h SUMA_gen_include.h SUMA_Macros.h SUMA_prototype.h SUMA_SVmanip.h SUMA_SphericalMapping.h

#library only
${SUMALIB} : libply.a ${SUMA_OBJS}
	rm -f ${SUMALIB}
	ar q ${SUMALIB} ${SUMA_OBJS}
	echo "library Rebuilt ..."
	$(RANLIB) ${SUMALIB} 

#Main objects, You don't want main functions in libSUMA.a 
mainobj: ${SUMALIB} ${SUMA_SRCS_OBJS}

clean:
	$(RM) *.o

.c.o:
	${CC} ${CCOPT} ${WARNOPT} ${SUMA_INCLUDE_PATH} -c $*.c 

suma: SUMA_suma.o 
	$(RM) $@
	${CC} ${CCOPT} ${WARNOPT} -o suma ${AFNI_OBJS} SUMA_suma.o ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

MakeColorMap: SUMA_Color.c
	$(RM) $@
	${CC} -DSUMA_MakeColorMap_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS} $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

ScaleToMap: SUMA_Color.c
	$(RM) $@
	${CC} -DSUMA_ScaleToMap_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS} $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

SUMA_FreeSurfer: SUMA_Surface_IO.c
	$(RM) $@
	${CC} -DSUMA_FreeSurfer_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS} $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

SUMA_Read_SpecFile: SUMA_Load_Surface_Object.c
	$(RM) $@
	${CC} -DSUMA_Read_SpecFile_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS} $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

SUMA_Load_Surface_Object: SUMA_Load_Surface_Object.c
	$(RM) $@
	${CC} -DSUMA_Load_Surface_Object_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS}  $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

SUMA_SureFit: SUMA_Surface_IO.c
	$(RM) $@
	${CC} -DSUMA_SureFit_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS} $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

SUMA_compare_surfaces: SUMA_compare_surfaces.c
	$(RM) $@
	${CC} -DSUMA_compare_surfaces_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS} $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

SUMA_inflate_compare: SUMA_inflate_compare.c
	$(RM) $@
	${CC} -DSUMA_inflate_compare_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS} $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

SUMA_CreateIcosahedron: SUMA_SphericalMapping.c
	$(RM) $@
	${CC} -DSUMA_CreateIcosahedron_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS} $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

SUMA_Map_SurfacetoSurface: SUMA_SphericalMapping.c
	$(RM) $@
	${CC} -DSUMA_Map_SurfacetoSurface_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS} $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

SUMA_MapIcosahedron: SUMA_SphericalMapping.c
	$(RM) $@
	${CC} -DSUMA_MapIcosahedron_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS} $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

SUMA_SurfNorm: SUMA_SurfNorm.c
	$(RM) $@
	${CC} -DSUMA_SurfNorm_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS} $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

SUMA_Ply_Read: SUMA_Surface_IO.c
	$(RM) $@
	${CC} -DSUMA_Ply_Read_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS} $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

SUMA_ParseName: SUMA_StripPath.c
	$(RM) $@
	${CC} -DSUMA_ParseName_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS} $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}
 
SUMA_ConvertSurface: SUMA_Surface_IO.c
	$(RM) $@
	${CC} -DSUMA_ConvertSurface_STAND_ALONE ${CCOPT} ${WARNOPT} -o $@ ${AFNI_OBJS} $< ${SUMALIB} libply.a ${AFNILIB} ${ZLIB} ${SUMA_INCLUDE_PATH} ${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

3dSurfMaskDump: SUMA_3dSurfMaskDump.c 
	$(RM) $@
	${CC} ${CCOPT} ${WARNOPT} -o $@ $< ${SUMA_INCLUDE_PATH}		\
		${AFNI_3dOBJS} ${AFNI_OBJS} -lf2c			\
		${SUMALIB} libply.a ${AFNILIB} ${ZLIB}			\
		${SUMA_LINK_PATH} ${SUMA_LINK_LIB}

libply.a: 
	( cd PLY ;	\
	  make clean $@ 'CC=$(CC)' 'RM=$(RM)' 'RANLIB=$(RANLIB)' 'CCOPT=$(CCOPT)' 'WARNOPT=$(WARNOPT)' ; \
	  $(CP) -p $@ .. ; )
   
install:
	if [ ! -d $(INSTALLDIR_SUMA) ]; then $(MKDIR) -p $(INSTALLDIR_SUMA); echo WARNING: directory $(INSTALLDIR_SUMA) has been created from SUMA directory. ; fi
	mv suma ${INSTALLDIR_SUMA}

packbins:
	if [ ! -d SUMA_bin	]; then $(MKDIR) SUMA_bin; fi
	chmod u+x ./@SUMA_CreateCompileStamp
	./@SUMA_CreateCompileStamp SUMA_bin/@SUMA_CompileStamp
	$(CP) -p suma MakeColorMap libSUMA.a SUMA_bin/
	$(TAR) -cf $(SUMA_BIN_ARCHIVE) SUMA_bin
	${RM} -r SUMA_bin
	
all: libSUMA.a mainobj suma install 

standalones: SUMA_CreateIcosahedron SUMA_Map_SurfacetoSurface SUMA_MapIcosahedron SUMA_SureFit \
SUMA_Load_Surface_Object SUMA_Read_SpecFile SUMA_FreeSurfer ScaleToMap MakeColorMap \
SUMA_compare_surfaces SUMA_inflate_compare SUMA_Ply_Read SUMA_ParseName SUMA_ConvertSurface \
3dSurfMaskDump

 
anew: clean libSUMA.a mainobj suma standalones packbins install 
