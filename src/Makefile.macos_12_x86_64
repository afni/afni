
# This Makefile is for Mac OS 12, x86_64, using homebrew.
# See other_builds/OS_notes.macos_12_x86_64.tcsh for install details.

usr_ROOT   = /usr/local

USE_ZLIB  = -DHAVE_ZLIB
LZLIB     = -lz
USE_GIFTI = -DHAVE_GIFTI
LGIFTI    = -lexpat

# ------------------------------
# (no) python from C
# IPYTHON   =
# LPYTHON   =
# LDPYTHON  =

# ----------------------------------------------------------------------
# X configuration
#

XROOT   = /opt/X11
XROOT_I = -I$(XROOT)/include
XROOT_L = -L$(XROOT)/lib

XLIBS = -lXm -ljpeg -lXt

# ----------------------------------------------------------------------


CCDEBS = -DAFNI_DEBUG -DIMSEQ_DEBUG -DDISPLAY_DEBUG -DTHD_DEBUG
CEXTRA = -m64 -Wcomment -Wformat -DUSE_TRACING -DHAVE_XDBE \
         -DDONT_USE_MCW_MALLOC $(LESSTIF_DEFS)

# allow an alternate compiler or just gcc version to be used
LOCAL_CC_PATH ?= /usr/local/bin/gcc-13

# specify minimum CC and others
# CCMIN  = /usr/bin/gcc
CCMIN  = $(LOCAL_CC_PATH)
CC     = $(CCMIN) -O2 -DDARWIN $(CEXTRA)

CCVOL  = $(CC)
CCFAST = $(CC)
CCD    = $(CC) $(CCDEBS)
CCOLD  = $(CC)

# homebrew dirs for libomp
BREWI =  /usr/local/opt/libomp/include/
BREWL =  /usr/local/opt/libomp/lib/
OMPFLAG = -Xpreprocessor -fopenmp -lomp -I$(BREWI) -L$(BREWL) -DUSE_OMP

# specify the name of the resulting package
SYSTEM_NAME = macos_12_x86_64
INSTALLDIR = $(SYSTEM_NAME)

# ponder distribution of libraries later
#EXTRA_INSTALL_FILES = /usr/local/lib/libXm.4.dylib			  \
#		      /usr/local/lib/libjpeg.9.dylib			  \
#		      /usr/local/lib/libgsl.dylib               \
#		      /usr/local/lib/libglib-2.0.0.dylib		  \
#		      /usr/local/lib/libgslcblas.0.dylib		  \
#		      /usr/local/lib/libpng16.16.dylib			  \
#		      /usr/local/lib/libintl.8.dylib \
#              /usr/lib/libiconv.2.dylib 

#EXTRA_INSTALL_COMMANDS = ( cd $(INSTALLDIR) ;                                 \
#                           chmod u+w *.dylib ;                                \
#                           if [ -d $(HOME)/EXTRAPROGS ]; then $(CP) $(HOME)/EXTRAPROGS/* . ; fi ; )

# for IFLAGS or LFLAGS (including for SUMA), put homebrew before other sys dirs
IFLAGS = -I. -I/usr/local/include $(XROOT_I) \
	 -I/usr/local/include/netpbm -I/usr/include
         
LFLAGS = -L. -L/usr/local/lib $(XROOT_L) -L/usr/local/lib \
	 -Wl,-x -Wl,-multiply_defined -Wl,warning -Wl,-bind_at_load $(LPYTHON)

CCSVD  = $(CCMIN) -m64 -O0

PLUGIN_SUFFIX = so
PLUGIN_LFLAGS = -m64 -bundle -flat_namespace -undefined suppress -Wl,-x
PLUGIN_CC     = $(CC) -dynamic -fno-common
PLFLAGS       = -m64 -dynamic $(LFLAGS)

# include the line below if you want to include vector arith in 3dDeconvolve_f
# SPECIAL = -framework Accelerate -DUSE_ACCELERATE

AR     = /usr/bin/ar
RANLIB = /usr/bin/ranlib
TAR    = /usr/bin/tar
MKDIR  = /bin/mkdir
GZIP   = /usr/bin/gzip
LD     = $(CCMIN)

RM = /bin/rm -f
MV = /bin/mv -f
CP = /bin/cp -f

LINT = /usr/bin/lint -a -b -u -v -x $(IFLAGS) $(CCDEFS)

LIBDIR = $(INSTALLDIR)
SHOWOFF = -DSHOWOFF=$(SYSTEM_NAME)

INSTALL_PREREQ = suma_gts
# uncomment if the Gnu Scientific Library is installed (libgsl, libgslcblas)
# GSLPROGS = balloon
EXPROGS = $(GSLPROGS)

# specify generally needed libraries

LLIBS  = -lmri -lf2c $(XLIBS) -lXft -lfontconfig \
         -lpng16 -liconv -lXmu -lXp -lXpm -lXext -lX11      \
         $(LZLIB) $(LGIFTI) $(LDPYTHON) -lm -lc

# this is called a hack - command to convert dyname -lXm to static
# - used to compile R_io.so with static libXm.a
RLIB_CONVERT = | sed 's/-lXm/\/usr\/local\/lib\/libXm.a/'

# vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
# For suma
# ZSS Aug. 08. LibGLw.a now made locally and called libGLws.a

SUMA_GL_DYLIB_CMD = -lGL
NETPBMDIR = /usr/local/include/netpbm

GLw_IPATH  =
GLw_LIB = -lGLw
# uncomment next two lines if you want to use libGLws.a, SUMA's copy of GLw
GLw_IPATH  = -IGLw_local
GLw_LIB = libGLws.a


SUMA_GLIB_VER = -2.0
SUMA_INCLUDE_PATH = $(GLw_IPATH) -I.. -I../niml $(IFLAGS) -Igts/src -I${usr_ROOT}/lib/glib-2.0/include -I${usr_ROOT}/include/glib-2.0 
#SUMA_LINK_PATH = $(LFLAGS) $(XROOT_L) -L..
SUMA_LINK_PATH = $(LFLAGS) $(XROOT_L) -L..

SUMA_LINK_LIB = $(GLw_LIB) $(LLIBS) $(XLIBS) -lGLU -lGL -lmri -lf2c -lmx -L${usr_ROOT}/lib/ -lglib-2.0 $(SUMA_GL_DYLIB_CMD)
SUMA_MAKEFILE_NAME = SUMA_Makefile
SUMA_BIN_ARCHIVE = SUMA_MacOSX.tar
SUMA_MDEFS = -DSUMA_GL_NO_CHECK_FRAME_BUFFER 
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


###############################################################

MAKE = make
include Makefile.INCLUDE

