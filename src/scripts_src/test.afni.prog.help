#!/bin/tcsh

# if the prog list comes from a build dir, set this
set src_dir = ~/afni/src
set out_dir = help.out

# initialize bin_dir to the location of afni, or else the current directory
set bin_dir = `which afni`
if ( $status ) set bin_dir = .

set ac = 1
while ( $ac <= $#argv )
   if ( "$argv[$ac]" == "-help" ) then
      echo "help me help you"
      exit
   else if ( "$argv[$ac]" == "-bin_dir" ) then
      @ ac += 1
      set bin_dir = $argv[$ac]
   else if ( "$argv[$ac]" == "-src_dir" ) then
      @ ac += 1
      set src_dir = $argv[$ac]
   else
      echo "** unknown opt: $argv[$ac]"
      exit 1
   endif

   @ ac += 1
end

echo "-- running programs out of binary directory $bin_dir"
echo "-- using source code from $src_dir"
echo "-- writing help output under $out_dir"
echo ""

# ======================================================================
# get a program list

# --------------------------------------------------
# option 1, get progs from src

if ( 1 ) then

   if ( ! -f $src_dir/Makefile.INCLUDE ) then
      echo "** missing: $src_dir/Makefile.INCLUDE"
      exit 1
   endif

   cd $src_dir
   make prog_list
   set progs = ( `grep -v '#' prog_list.txt` )
   cd -

else

   # --------------------------------------------------
   # option 2, get progs from help dir
   set progs = (`\ls ~/.afni/help | grep '\.complete$' | sed 's/\.complete//'`)

endif


# ======================================================================
# make a working directory
if ( -d $out_dir ) \rm -fr $out_dir
mkdir $out_dir


# ======================================================================
# get to work

set good_stats = ()
set bad_stats = ()
foreach prog ( $progs )

  printf "%-30s" $prog
  $bin_dir/$prog -help >& $out_dir/$prog.help

  if ( $status ) then
     echo "                 BAD_STAT"
     set bad_stats = ( $bad_stats $prog )
  else
     echo GOOD
     set good_stats = ( $good_stats $prog )
  endif
end

echo ""
echo "found $#good_stats good progs and $#bad_stats issues out of $#progs"
echo ""
echo bad stats for: $bad_stats


##### consider writing $good_stats to a file, or even with $bad_stats
