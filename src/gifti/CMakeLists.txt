# This project is designed to be built outside the source tree.
# File generated by Simon K. Warfield simon.warfield@childrens.harvard.edu
# with support from NIH grant RR021885.
PROJECT(gifticlib)
cmake_minimum_required(VERSION 2.6)

# install destinations
SET(GIFTI_INSTALL_BIN_DIR "${CMAKE_INSTALL_PREFIX}/bin")
SET(GIFTI_INSTALL_LIB_DIR "${CMAKE_INSTALL_PREFIX}/lib")
SET(GIFTI_INSTALL_INCLUDE_DIR "${CMAKE_INSTALL_PREFIX}/include/gifti")

find_package(ITK REQUIRED)
include(${ITK_USE_FILE})
include_directories(
	${ITK_INCLUDE_DIRS}
)

find_package(EXPAT REQUIRED)
find_package(ZLIB REQUIRED)

set(NIFTI_LIBRARIES ITKniftiio)

# shared library API versioning -- NOT the same as the release version
SET(GIFTI_SHAREDLIB_VERSION "0.0.0")
STRING( REGEX MATCH "^[0-9]+" GIFTI_SHAREDLIB_SOVERSION ${GIFTI_SHAREDLIB_VERSION})
SET(GIFTI_LIBRARY_PROPERTIES VERSION ${GIFTI_SHAREDLIB_VERSION} SOVERSION ${GIFTI_SHAREDLIB_SOVERSION})

IF(ZLIB_FOUND)
  ADD_DEFINITIONS(-DHAVE_ZLIB)
ENDIF(ZLIB_FOUND)

set(GIFTI_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR} PARENT_SCOPE)

INCLUDE_DIRECTORIES(
"../nifti/nifti2"
${CRKIT_SOURCE_DIR}/External
${gifticlib_SOURCE_DIR}
${gifticlib_BINARY_DIR}
)

SET(GIFTIIO_SRC gifti_io.c gifti_xml.c)

# shared version
ADD_LIBRARY(giftiio SHARED ${GIFTIIO_SRC})
# Set library version when building shared libs.
SET_TARGET_PROPERTIES(giftiio PROPERTIES ${GIFTI_LIBRARY_PROPERTIES})
TARGET_LINK_LIBRARIES(giftiio ${ITK_LIBRARIES} ${EXPAT_LIBRARIES} ${NIFTI_LIBRARIES})
IF(ZLIB_FOUND)
  TARGET_LINK_LIBRARIES(giftiio ${ZLIB_LIBRARIES})
ENDIF(ZLIB_FOUND)

LINK_DIRECTORIES(${gifticlib_BINARY_DIR})

ADD_EXECUTABLE(gifti_tool gifti_tool.c)
TARGET_LINK_LIBRARIES(gifti_tool giftiio ${EXPAT_LIBRARIES} ${ZLIB_LIBRARIES} ${NIFTI_LIBRARIES})

ADD_EXECUTABLE(gifti_test gifti_test.c)
TARGET_LINK_LIBRARIES(gifti_test giftiio ${EXPAT_LIBRARIES} ${ZLIB_LIBRARIES} ${NIFTI_LIBRARIES})

# install
set_target_properties(giftiio PROPERTIES
	PUBLIC_HEADER "gifti_io.h;gifti_xml.h"
)

install(TARGETS giftiio gifti_tool gifti_test
	EXPORT GiftiTargets
	RUNTIME DESTINATION "${GIFTI_INSTALL_BIN_DIR}" COMPONENT bin
	LIBRARY DESTINATION "${GIFTI_INSTALL_LIB_DIR}" COMPONENT shlib
	PUBLIC_HEADER DESTINATION "${GIFTI_INSTALL_INCLUDE_DIR}"
	COMPONENT dev
)
