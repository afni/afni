#!/bin/tcsh -ef

# ---> ! should simplify and just do AP or PA separately-- much
# ---> ! easier/more generalized naming is possible!

# --- !!! add in video thing for easy QC

# written by PA Taylor (NIMH, NIH)
# convert dicoms to nifti, while "niceifying" several properties.


# --------------------- revision history -------------------------
#
# Jan, 2017
#   + rename
#
# Jan 27, 2017
#   + update opts
#   + use 1dDW_Grad_o_Mat++
#
#set version = "2.4"
#set rev_dat = "Feb 19, 2017"
#   + add snapshotting with @djunct_dwi_imager
#   + made nicer working dir stuff
#
#set version = "2.5"; set rev_dat = "Feb 20, 2017"
#   + no longer gzip WDIR files (for speed)
#   + sep wdirs, in case writing AP/PA to same dir
#   + can clean up wdirs
#
set version = "2.6"; set rev_dat = "Apr 13, 2017"
#   + standardize I/O, wdir
#
# ----------------------------------------------------------------

set this_prog = "fat_proc_convert_dcm_dwis"
set tpname    = "${this_prog:gas/fat_proc_//}"
set here     = $PWD

# ----------------- find AFNI and set viewer ---------------------

# find AFNI binaries directory and viewer location
set adir      = ""
set my_viewer = ""
which afni >& /dev/null
if ( $status ) then
    echo "** Cannot find 'afni' (?!)."
    goto BAD_EXIT
else
    set aa   = `which afni`
    set adir = $aa:h
endif

# default location of viewer: user could modify!
set my_viewer = "$adir/@chauffeur_afni"

# ----------------------- set defaults --------------------------

set idir  = ""
set odir  = ""
set opref     = "AP"        # default file output prefix
set ori_new  = "RPI"       # default file output orientation
set doflip   = ""          # default: no flip of grads
set DO_REORI = 1
set DO_CLEAN = 0

set wdir     = "__WORKING_$tpname"

# ------------------- process options, a la rr ----------------------

if ( $#argv == 0 ) goto SHOW_HELP

set ac = 1
while ( $ac <= $#argv )
    # terminal options
    if ( ("$argv[$ac]" == "-h" ) || ("$argv[$ac]" == "-help" )) then
        goto SHOW_HELP
    endif
    if ( "$argv[$ac]" == "-ver" ) then
        goto SHOW_VERSION
    endif

    # ------------- input(s) ----------------
    if ( "$argv[$ac]" == "-indir" ) then
        if ( $ac >= $#argv ) goto FAIL_MISSING_ARG
        @ ac += 1
        set idir = "$argv[$ac]"

    # ------------- output(s) ----------------
        
    else if ( "$argv[$ac]" == "-prefix" ) then
        if ( $ac >= $#argv ) goto FAIL_MISSING_ARG
        @ ac += 1
        set opref = "$argv[$ac]"

    else if ( "$argv[$ac]" == "-workdir" ) then
        if ( $ac >= $#argv ) goto FAIL_MISSING_ARG
        @ ac += 1
        set wdir = "$argv[$ac]"

    # -------------- other opts ----------------
    else if ( "$argv[$ac]" == "-orient" ) then
        if ( $ac >= $#argv ) goto FAIL_MISSING_ARG
        @ ac += 1
        set ori_new = "$argv[$ac]"
        
    else if ( "$argv[$ac]" == "-flip_x" ) then
        set doflip = "-flip_x"

    else if ( "$argv[$ac]" == "-flip_y" ) then
        set doflip = "-flip_y"

    else if ( "$argv[$ac]" == "-flip_z" ) then
        set doflip = "-flip_z"

    else if ( "$argv[$ac]" == "-no_flip" ) then
        set doflip = "-no_flip"

    # -------------- more other opts ----------------
    else if ( "$argv[$ac]" == "-reorig_reorient_off" ) then
        set DO_REORI = 0          # leave 'em alone!

    else if ( "$argv[$ac]" == "-do_clean" ) then
        set DO_CLEAN = 1

    else
        echo "** unexpected option #$ac = '$argv[$ac]'"
        goto BAD_EXIT

    endif
    @ ac += 1
end


# =======================================================================
# ============================ ** SETUP ** ==============================
# =======================================================================

echo "++ Start script version: $version"

# ============================= dicom dir ===============================

if ( "$idir" == "" ) then
    echo "** ERROR: need to input a DICOM directory with '-indir ...'"
    goto BAD_EXIT
endif

if ( "$idir" != "" ) then
    set idir = `ls -d $idir`
    set Nap = $#idir
    echo "++ Found $Nap directories from '-indir $idir':"
    echo "\t $idir"
endif

# ============================= input dir ===============================

# check for old relics

foreach dd ( $idir ) 

    cd $here
    cd $dd

    echo "++ Checking ${dd} for preexisting NIFTIs ... "

    if ( (`find . -maxdepth 1 -type f -name "*nii" | wc -l` > 0 ) || \
         (`find . -maxdepth 1 -type f -name "*nii.gz" | wc -l` > 0 ) ) then
        echo "\n** ERROR: already some nifti files in $dd !"
        goto BAD_EXIT
    endif
end

cd $here
echo "++ --> OK, good, no competing NIFTIs in any DICOM directory."

# ============================= output dirs =============================

# check output directory, use default if nec
!!!!!!!! HERE!
# default output dir, if nothing input.
if ( "$idir" != "" ) then

    if ("$odir" == "") then
        set odir = "$idir[1]/../UNFILT_AP"
        echo "\n++ No output 'AP' directory specified by the user."
        echo "\t Using default location/naming output directory:"
        echo "\t   $odir"
    endif

    if ( -e "$odir" ) then
        echo "\n+* WARNING: already some output directory $odir !"
    else
        mkdir $odir
    endif

    # and working dir
    if ( -e "$odir/$wdirap" ) then
        echo "\n+* WARNING: already some output directory $odir/$wdirap !"
    else
        mkdir $odir/$wdirap
    endif
endif

# =======================================================================
# =========================== ** PROCESS ** =============================
# =======================================================================

# ======================== convert dicoms ===============================

if ( "$idir" != "") then
    foreach dd ( $idir )
        echo "\n++ OK, now converting dicoms in: $dd"
        dcm2nii -g n -o "$odir/$wdirap" $dd/*
    end
endif

# ============ do the major rearranging/sorting/combining ================

# ----> future note: simplify scripting with loop instead of lame
# ----> copying...

# Use this to give AP and PA same origin....
set have_orig = 0  
set ORIG = ( 0 0 0 )

# first for AP, if they are input
if ( "$odir" != "") then

    cd $here
    cd $odir/$wdirap

    set all_bvec = `ls *bvec`
    @ Nbvec = $#all_bvec
    echo "++ Found $Nbvec sets of DTI data in ${odir}..."
    echo "   Organizizing now."

    # overkill, but make sure everything stays sorted in proper order
    set list_cvecs = ( )
    set list_vols  = ( )

    foreach i ( `seq 1 1 $Nbvec` )
        @ ii = $i - 1
        set ff = "$all_bvec[$i]"
        set gg = ${ff:gas/.bvec//}

        # combine bvals and bvec, NEWER func call
        1dDW_Grad_o_Mat++                          \
            -in_row_vec   ${gg}.bvec               \
            -in_bvals     ${gg}.bval               \
            $doflip                                \
            -out_col_vec _TEMP_${ii}.cvec

        # in either case, floatize here
        if ( $DO_REORI ) then
            3dresample                             \
                -overwrite                         \
                -orient $ori_new                   \
                -prefix _TEMP_${ii}.nii            \
                -inset  ${gg}.nii

            3dcalc                                 \
                -a _TEMP_${ii}.nii                 \
                -expr 'a'                          \
                -prefix _TEMP_${ii}.nii            \
                -datum float                       \
                -overwrite
        else
            # chicken...
            3dcalc                                 \
                -a ${gg}.nii                       \
                -expr 'a'                          \
                -prefix _TEMP_${ii}.nii            \
                -datum float                       \
                -overwrite
        endif

        set list_cvecs = ( $list_cvecs _TEMP_${ii}.cvec )
        set list_vols  = ( $list_vols  _TEMP_${ii}.nii )
    end

    # Combine everything
    set all_cvecs = "_TEMP_ALL.cvec"
    set fin_bvecs = "${opref}.bvec"
    set fin_bvals = "${opref}.bval"
    set fin_vols  = "${opref}.nii"

    # clear away a file, if *somehow* there? (shouldn't be...)
    if ( -e $all_cvecs ) then
        \rm $all_cvecs
    endif
    foreach ff ( $list_cvecs )
        cat $ff >> $all_cvecs
    end
    3dTcat                             \
        -overwrite                     \
        -prefix ../$fin_vols           \
        $list_vols

    if ( $DO_REORI ) then
        # set the (0,0,0) to the CM of the brain, or apply the previously
        # calc'ed origin. (Aug., 2016)
        if ( $have_orig ) then
            echo "++ Apply known appropriate origin."
            3drefit                        \
                -xorigin_raw $ORIG[1]      \
                -yorigin_raw $ORIG[2]      \
                -zorigin_raw $ORIG[3]      \
                ../$fin_vols
        else
            echo "++ Set center of brain to center of mass..."
            3dCM -automask -set 0 0 0 ../$fin_vols
            echo "++ ... and remember it."
            set ORIG = `3dinfo -o3 ../$fin_vols`
            set have_orig = 1
        endif
    endif

    # Feb,2017: take images!
    if ( 1 ) then

        set img_pref = `basename $fin_vols .gz`
        set img_pref = `basename $img_pref .nii`

        @djunct_dwi_imager                    \
            -inset  ../$fin_vols              \
            -outdir ".."                      \
            -prefix "$img_pref"
    endif

    echo "++ And putting the bvec/bval files in their place"
    # make bval/bvec/*.nii files
    1dDW_Grad_o_Mat++                          \
        -echo_edu                              \
        -in_col_vec       $all_cvecs           \
        -out_row_bval_sep ../$fin_bvals        \
        -unit_mag_out                          \
        -out_row_vec      ../$fin_bvecs

    if ( $DO_CLEAN == 1 ) then
        echo "++ Cleaning working directory."
        cd ..
        \rm -rf $wdirap
    endif

    echo "++ Done with AP."
endif 


# ================ display outputs  ====================

echo "\n++ All done!\n"

if ( "$odir" != "") then

    cd $here
    cd $odir

    set all_out = `ls *{bval,bvec,nii}`
    echo "++ In ${PWD}:"
    if ( $#all_out >= 1 ) then
        foreach ff ( $all_out )
            echo "\t $ff"
        end
    else
        echo "** ERROR: No files, even though some should be here?"
    endif
endif

goto GOOD_EXIT

# ========================================================================
# ========================================================================

SHOW_HELP:
cat << EOF
-------------------------------------------------------------------------
    !!!!!!!!!!!!!!!! REWRITE !!!!!!!!!!!!!!!!!
    The purpose of this function is to help convert one or more sets
    of DWIs in DICOM format into 'nicer' volume+grad format.  This 
    function can process AP/PA (AKA 'blip up'/'blip down') data sets in 
    parallel.  Also, if multiple directories of DICOMS exist for a given
    AP or PA set, then those can be combined into a single volume+grad 
    file.  Data sets are also converted to have a single orientation.

    This program can be used to: convert dicoms to NIFTI (with bvals
    and bvecs); reorient volumetric data; and glue together multiple
    sessions/directories of data (may the user choose what is
    appropriate to combine!).  More functionality could be demanded by
    demanding users.

    REQUIRES: AFNI, dcm2nii.

    Ver. $version (PA Taylor, ${rev_dat})

-------------------------------------------------------------------------

  RUNNING: at least one of the two '-indir_* ...' directories needs to
           be given; both can be, and the processing happens in
           parallel, producing two output directories. The 'AP' vs
           'PA' designation is not very important-- it is really a
           naming convention to differentiate the separate phase
           encodings.

    $this_prog  \
      -indir   DIR_AP                       \
      {-prefix_ap PRE_AP}                      \
      {-workdir   WWW}                         \
      {-orient    ORIENT}                      \
      {-flip_x | -flip_y | -flip_z | -no_flip} \
      {-no_clean}

  where:
  -indir  DIR_AP :directory name(s) of (only) DICOM files of the
                     DWI data,designated as having 'AP' phase
                     encoding.  DIR_AP can actually contain a wildcard
                     expression for several directories, if, for
                     example, multiple DWI sets should be glued
                     together into one set.  NOTE: if specifying more
                     than one directory, put double quotes around your
                     entry, like: "file*".

    -prefix   PPP   :set prefix (and path) for output data; will be prefix
                     for the *.nii, *.bvec and *.bval files. Required.

    -orient  ORIENT :optional chance to reset orientation of the volume
                     files (default is currently '$ori_new').

  -reorig_reorient_off
                    :switch to turn of the nicety of putting (0, 0, 0)
                     at brain's center of mass (-> 'reorigin' calc) and to
                     not reorient data (-> 'reorient' calc).  Could lead
                     to weirdness later on down the road, depending on the
                     data and headers (ergo, not recommended.)

  -flip_x | -flip_y | -flip_z | -no_flip
                    :use any one of these for the ability to flip grads 
                     while processing with 1dDW_Grad_o_Mat++. (Default is 
                     to not flip.)

   -no_clean        :switch to not remove working directory of intermediate,
                     temporary files (default is to delete it).

-------------------------------------------------------------------------

  OUTPUTS:

    For a given phase encoding set (and both can be processed
    simultaneously, in parallel), the output directory contains a
    NIFTI file with N volumes, a row-wise (3xN) bvec file of the
    gradient orientations, and a row-wise (1xN) bval file of the
    gradient magnitudes; these files are respectively named: 
        PREFIX.nii 
        PREFIX.bvec 
        PREFIX.bval
    and they are meant to mimic the trio of files output by dcm2nii.

-------------------------------------------------------------------------

  EXAMPLE:
    $this_prog  \
        -indir  "SUB001/DTI_AP_0*"            \
        -prefix UNFILT/dwi

    or

    $this_prog  \
        -indir  "DTI_DICOMS"                 \
        -prefix  UNFILT_DTI/dwi

-------------------------------------------------------------------------

EOF

    goto GOOD_EXIT

SHOW_VERSION:
    echo "version  $version (${rev_dat})"
    goto GOOD_EXIT

BAD_EXIT:
    exit 1

# send everyone here, in case there is any cleanup to do
GOOD_EXIT:
    exit 0
